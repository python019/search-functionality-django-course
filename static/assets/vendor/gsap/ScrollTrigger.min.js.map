{"version":3,"file":"ScrollTrigger.min.js","sources":["../src/Observer.js","../src/ScrollTrigger.js"],"sourcesContent":["/*!\n * Observer 3.10.3\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _clamp, _win, _doc, _docEl, _body, _isTouch, _pointerType, ScrollTrigger, _root, _normalizer, _eventTypes,\n\t_getGSAP = () => gsap || (typeof(window) !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_passThrough = p => p,\n\t_startup = 1,\n\t_observers = [],\n\t_scrollers = [],\n\t_proxies = [],\n\t_getTime = Date.now,\n\t_bridge = (name, value) => value,\n\t_integrate = () => {\n\t\tlet core = ScrollTrigger.core,\n\t\t\tdata = core.bridge || {},\n\t\t\tscrollers = core._scrollers,\n\t\t\tproxies = core._proxies;\n\t\tscrollers.push(..._scrollers);\n\t\tproxies.push(..._proxies);\n\t\t_scrollers = scrollers;\n\t\t_proxies = proxies;\n\t\t_bridge = (name, value) => data[name](value);\n\t},\n\t_getProxyProp = (element, property) => ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property],\n\t_isViewport = el => !!~_root.indexOf(el),\n\t_addListener = (element, type, func, nonPassive, capture) => element.addEventListener(type, func, {passive: !nonPassive, capture: !!capture}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_onScroll = () => (_normalizer && _normalizer.isPressed) || _scrollers.cache++,\n\t_scrollCacheFunc = f => value => { // since reading the scrollTop/scrollLeft/pageOffsetY/pageOffsetX can trigger a layout, this function allows us to cache the value so it only gets read fresh after a \"scroll\" event fires (or while we're refreshing because that can lengthen the page and alter the scroll position). when \"soft\" is true, that means don't actually set the scroll, but cache the new value instead (useful in ScrollSmoother)\n\t\tif (value || value === 0) {\n\t\t\t_startup && (_win.history.scrollRestoration = \"manual\"); // otherwise the new position will get overwritten by the browser onload.\n\t\t\t//value = Math.round(value);\n\t\t\tf(value);\n\t\t\tf.v = value;\n\t\t\tf.c = _scrollers.cache;\n\t\t\t_normalizer && _normalizer.isPressed && _bridge(\"ss\", value); // set scroll (notify ScrollTrigger so it can dispatch a \"scrollStart\" event if necessary\n\t\t} else if (_scrollers.cache !== f.c || _bridge(\"ref\")) {\n\t\t\tf.c = _scrollers.cache;\n\t\t\tf.v = f();\n\t\t}\n\t\treturn f.v;\n\t},\n\t_horizontal = {s: _scrollLeft, p: \"left\", p2: \"Left\", os: \"right\", os2: \"Right\", d: \"width\", d2: \"Width\", a: \"x\", sc: _scrollCacheFunc(function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0})},\n\t_vertical = {s: _scrollTop, p: \"top\", p2: \"Top\", os: \"bottom\", os2: \"Bottom\", d: \"height\", d2: \"Height\", a: \"y\", op: _horizontal, sc: _scrollCacheFunc(function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0})},\n\t_getTarget = t => gsap.utils.toArray(t)[0] || (typeof(t) === \"string\" && gsap.config().nullTargetWarn !== false ? console.warn(\"Element not found:\", t) : null),\n\n\t_getScrollFunc = (element, {s, sc}) => { // we store the scroller functions in a alternating sequenced Array like [element, verticalScrollFunc, horizontalScrollFunc, ...] so that we can minimize memory, maximize performance, and we also record the last position as a \".rec\" property in order to revert to that after refreshing to ensure things don't shift around.\n\t\tlet i = _scrollers.indexOf(element),\n\t\t\toffset = sc === _vertical.sc ? 1 : 2;\n\t\t!~i && (i = _scrollers.push(element) - 1);\n\t\treturn _scrollers[i + offset] || (_scrollers[i + offset] = _getProxyProp(element, s) || (_isViewport(element) ? sc : _scrollCacheFunc(function(value) { return arguments.length ? (element[s] = value) : element[s]; })));\n\t},\n\t_getVelocityProp = (value, minTimeRefresh, useDelta) => {\n\t\tlet v1 = value,\n\t\t\tv2 = value,\n\t\t\tt1 = _getTime(),\n\t\t\tt2 = t1,\n\t\t\tmin = minTimeRefresh || 50,\n\t\t\tdropToZeroTime = Math.max(500, min * 3),\n\t\t\tupdate = (value, force) => {\n\t\t\t\tlet t = _getTime();\n\t\t\t\tif (force || t - t1 > min) {\n\t\t\t\t\tv2 = v1;\n\t\t\t\t\tv1 = value;\n\t\t\t\t\tt2 = t1;\n\t\t\t\t\tt1 = t;\n\t\t\t\t} else if (useDelta) {\n\t\t\t\t\tv1 += value;\n\t\t\t\t} else { // not totally necessary, but makes it a bit more accurate by adjusting the v1 value according to the new slope. This way we're not just ignoring the incoming data. Removing for now because it doesn't seem to make much practical difference and it's probably not worth the kb.\n\t\t\t\t\tv1 = v2 + (value - v2) / (t - t2) * (t1 - t2);\n\t\t\t\t}\n\t\t\t},\n\t\t\treset = () => { v2 = v1 = useDelta ? 0 : v1; t2 = t1 = 0; },\n\t\t\tgetVelocity = latestValue => {\n\t\t\t\tlet tOld = t2,\n\t\t\t\t\tvOld = v2,\n\t\t\t\t\tt = _getTime();\n\t\t\t\t(latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);\n\t\t\t\treturn (t1 === t2 || t - t2 > dropToZeroTime) ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;\n\t\t\t};\n\t\treturn {update, reset, getVelocity};\n\t},\n\t_getEvent = (e, preventDefault) => {\n\t\tpreventDefault && !e._gsapAllow && e.preventDefault();\n\t\treturn e.changedTouches ? e.changedTouches[0] : e;\n\t},\n\t_getAbsoluteMax = a => {\n\t\tlet max = Math.max(...a),\n\t\t\tmin = Math.min(...a);\n\t\treturn Math.abs(max) >= Math.abs(min) ? max : min;\n\t},\n\t_setScrollTrigger = () => {\n\t\tScrollTrigger = gsap.core.globals().ScrollTrigger;\n\t\tScrollTrigger && ScrollTrigger.core && _integrate();\n\t},\n\t_initCore = core => {\n\t\tgsap = core || _getGSAP();\n\t\tif (gsap && typeof(document) !== \"undefined\" && document.body) {\n\t\t\t_win = window;\n\t\t\t_doc = document;\n\t\t\t_docEl = _doc.documentElement;\n\t\t\t_body = _doc.body;\n\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t_pointerType = \"onpointerenter\" in _body ? \"pointer\" : \"mouse\";\n\t\t\t// isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\t\t\t_isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : (\"ontouchstart\" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) ? 2 : 0;\n\t\t\t_eventTypes = Observer.eventTypes = (\"ontouchstart\" in _docEl ? \"touchstart,touchmove,touchcancel,touchend\" : !(\"onpointerdown\" in _docEl) ? \"mousedown,mousemove,mouseup,mouseup\" : \"pointerdown,pointermove,pointercancel,pointerup\").split(\",\");\n\t\t\tsetTimeout(() => _startup = 0, 500);\n\t\t\t_setScrollTrigger();\n\t\t\t_coreInitted = 1;\n\t\t}\n\t\treturn _coreInitted;\n\t};\n\n_horizontal.op = _vertical;\n_scrollers.cache = 0;\n\nexport class Observer {\n\tconstructor(vars) {\n\t\tthis.init(vars);\n\t}\n\n\tinit(vars) {\n\t\t_coreInitted || _initCore(gsap) || console.warn(\"Please gsap.registerPlugin(Observer)\");\n\t\tScrollTrigger || _setScrollTrigger();\n\t\tlet {tolerance, dragMinimum, type, target, lineHeight, debounce, preventDefault, onStop, onStopDelay, ignore, wheelSpeed, event, onDragStart, onDragEnd, onDrag, onPress, onRelease, onRight, onLeft, onUp, onDown, onChangeX, onChangeY, onChange, onToggleX, onToggleY, onHover, onHoverEnd, onMove, ignoreCheck, isNormalizer, onGestureStart, onGestureEnd, onWheel, onEnable, onDisable, onClick, scrollSpeed, capture, allowClicks, lockAxis, onLockAxis} = vars;\n\t\tthis.target = target = _getTarget(target) || _docEl;\n\t\tthis.vars = vars;\n\t\tignore && (ignore = gsap.utils.toArray(ignore));\n\t\ttolerance = tolerance || 0;\n\t\tdragMinimum = dragMinimum || 0;\n\t\twheelSpeed = wheelSpeed || 1;\n\t\tscrollSpeed = scrollSpeed || 1;\n\t\ttype = type || \"wheel,touch,pointer\";\n\t\tdebounce = debounce !== false;\n\t\tlineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22); // note: browser may report \"normal\", so default to 22.\n\t\tlet id, onStopDelayedCall, dragged, moved, wheeled, locked, axis,\n\t\t\tself = this,\n\t\t\tprevDeltaX = 0,\n\t\t\tprevDeltaY = 0,\n\t\t\tscrollFuncX = _getScrollFunc(target, _horizontal),\n\t\t\tscrollFuncY = _getScrollFunc(target, _vertical),\n\t\t\tscrollX = scrollFuncX(),\n\t\t\tscrollY = scrollFuncY(),\n\t\t\tlimitToTouch = ~type.indexOf(\"touch\") && !~type.indexOf(\"pointer\") && _eventTypes[0] === \"pointerdown\", // for devices that accommodate mouse events and touch events, we need to distinguish.\n\t\t\tisViewport = _isViewport(target),\n\t\t\townerDoc = target.ownerDocument || _doc,\n\t\t\tdeltaX = [0, 0, 0], // wheel, scroll, pointer/touch\n\t\t\tdeltaY = [0, 0, 0],\n\t\t\tonClickTime = 0,\n\t\t\tclickCapture = () => onClickTime = _getTime(),\n\t\t\t_ignoreCheck = (e, isPointerOrTouch) => (self.event = e) && (ignore && ~ignore.indexOf(e.target)) || (isPointerOrTouch && limitToTouch && e.pointerType !== \"touch\") || (ignoreCheck && ignoreCheck(e, isPointerOrTouch)),\n\t\t\tonStopFunc = () => {\n\t\t\t\tself._vx.reset();\n\t\t\t\tself._vy.reset();\n\t\t\t\tonStopDelayedCall.pause();\n\t\t\t\tonStop && onStop(self);\n\t\t\t},\n\t\t\tupdate = () => {\n\t\t\t\tlet dx = self.deltaX = _getAbsoluteMax(deltaX),\n\t\t\t\t\tdy = self.deltaY = _getAbsoluteMax(deltaY),\n\t\t\t\t\tchangedX = Math.abs(dx) >= tolerance,\n\t\t\t\t\tchangedY = Math.abs(dy) >= tolerance;\n\t\t\t\tonChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY); // in ScrollTrigger.normalizeScroll(), we need to know if it was touch/pointer so we need access to the deltaX/deltaY Arrays before we clear them out.\n\t\t\t\tif (changedX) {\n\t\t\t\t\tonRight && self.deltaX > 0 && onRight(self);\n\t\t\t\t\tonLeft && self.deltaX < 0 && onLeft(self);\n\t\t\t\t\tonChangeX && onChangeX(self);\n\t\t\t\t\tonToggleX && ((self.deltaX < 0) !== (prevDeltaX < 0)) && onToggleX(self);\n\t\t\t\t\tprevDeltaX = self.deltaX;\n\t\t\t\t\tdeltaX[0] = deltaX[1] = deltaX[2] = 0\n\t\t\t\t}\n\t\t\t\tif (changedY) {\n\t\t\t\t\tonDown && self.deltaY > 0 && onDown(self);\n\t\t\t\t\tonUp && self.deltaY < 0 && onUp(self);\n\t\t\t\t\tonChangeY && onChangeY(self);\n\t\t\t\t\tonToggleY && ((self.deltaY < 0) !== (prevDeltaY < 0)) && onToggleY(self);\n\t\t\t\t\tprevDeltaY = self.deltaY;\n\t\t\t\t\tdeltaY[0] = deltaY[1] = deltaY[2] = 0\n\t\t\t\t}\n\t\t\t\tif (moved || dragged) {\n\t\t\t\t\tonMove && onMove(self);\n\t\t\t\t\tonLockAxis && locked && onLockAxis(self);\n\t\t\t\t\tif (dragged) {\n\t\t\t\t\t\tonDrag(self);\n\t\t\t\t\t\tdragged = false;\n\t\t\t\t\t}\n\t\t\t\t\tmoved = locked = false;\n\t\t\t\t}\n\t\t\t\tif (wheeled) {\n\t\t\t\t\tonWheel(self);\n\t\t\t\t\twheeled = false;\n\t\t\t\t}\n\t\t\t\tid = 0;\n\t\t\t},\n\t\t\tonDelta = (x, y, index) => {\n\t\t\t\tdeltaX[index] += x;\n\t\t\t\tdeltaY[index] += y;\n\t\t\t\tself._vx.update(x);\n\t\t\t\tself._vy.update(y);\n\t\t\t\tdebounce ? id || (id = requestAnimationFrame(update)) : update();\n\t\t\t},\n\t\t\tonTouchOrPointerDelta = (x, y) => {\n\t\t\t\tif (axis !== \"y\") {\n\t\t\t\t\tdeltaX[2] += x;\n\t\t\t\t\tself._vx.update(x, true); // update the velocity as frequently as possible instead of in the debounced function so that very quick touch-scrolls (flicks) feel natural. If it's the mouse/touch/pointer, force it so that we get snappy/accurate momentum scroll.\n\t\t\t\t}\n\t\t\t\tif (axis !== \"x\") {\n\t\t\t\t\tdeltaY[2] += y;\n\t\t\t\t\tself._vy.update(y, true);\n\t\t\t\t}\n\t\t\t\tif (lockAxis && !axis) {\n\t\t\t\t\tself.axis = axis = Math.abs(x) > Math.abs(y) ? \"x\" : \"y\";\n\t\t\t\t\tlocked = true;\n\t\t\t\t}\n\t\t\t\tdebounce ? id || (id = requestAnimationFrame(update)) : update();\n\t\t\t},\n\t\t\t_onDrag = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tlet x = e.clientX,\n\t\t\t\t\ty = e.clientY,\n\t\t\t\t\tdx = x - self.x,\n\t\t\t\t\tdy = y - self.y,\n\t\t\t\t\tisDragging = self.isDragging;\n\t\t\t\tself.x = x;\n\t\t\t\tself.y = y;\n\t\t\t\tif (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {\n\t\t\t\t\tonDrag && (dragged = true);\n\t\t\t\t\tisDragging || (self.isDragging = true);\n\t\t\t\t\tonTouchOrPointerDelta(dx, dy);\n\t\t\t\t\tisDragging || onDragStart && onDragStart(self);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_onPress = self.onPress = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\tself.axis = axis = null;\n\t\t\t\tonStopDelayedCall.pause();\n\t\t\t\tself.isPressed = true;\n\t\t\t\te = _getEvent(e); // note: may need to preventDefault(?) Won't side-scroll on iOS Safari if we do, though.\n\t\t\t\tprevDeltaX = prevDeltaY = 0;\n\t\t\t\tself.startX = self.x = e.clientX;\n\t\t\t\tself.startY = self.y = e.clientY;\n\t\t\t\tself._vx.reset(); // otherwise the t2 may be stale if the user touches and flicks super fast and releases in less than 2 requestAnimationFrame ticks, causing velocity to be 0.\n\t\t\t\tself._vy.reset();\n\t\t\t\t_addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, preventDefault, capture);\n\t\t\t\tself.deltaX = self.deltaY = 0;\n\t\t\t\tonPress && onPress(self);\n\t\t\t},\n\t\t\t_onRelease = e => {\n\t\t\t\tif (_ignoreCheck(e, 1)) {return;}\n\t\t\t\t_removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag);\n\t\t\t\tlet wasDragging = self.isDragging && (Math.abs(self.x - self.startX) > 3 || Math.abs(self.y - self.startY) > 3), // some touch devices need some wiggle room in terms of sensing clicks - the finger may move a few pixels.\n\t\t\t\t\teventData = _getEvent(e);\n\t\t\t\tif (!wasDragging) {\n\t\t\t\t\tself._vx.reset();\n\t\t\t\t\tself._vy.reset();\n\t\t\t\t\tif (preventDefault && allowClicks) {\n\t\t\t\t\t\tgsap.delayedCall(0.05, () => { // some browsers (like Firefox) won't trust script-generated clicks, so if the user tries to click on a video to play it, for example, it simply won't work. Since a regular \"click\" event will most likely be generated anyway (one that has its isTrusted flag set to true), we must slightly delay our script-generated click so that the \"real\"/trusted one is prioritized. Remember, when there are duplicate events in quick succession, we suppress all but the first one. Some browsers don't even trigger the \"real\" one at all, so our synthetic one is a safety valve that ensures that no matter what, a click event does get dispatched.\n\t\t\t\t\t\t\tif (_getTime() - onClickTime > 300 && !e.defaultPrevented) {\n\t\t\t\t\t\t\t\tif (e.target.click) { //some browsers (like mobile Safari) don't properly trigger the click event\n\t\t\t\t\t\t\t\t\te.target.click();\n\t\t\t\t\t\t\t\t} else if (ownerDoc.createEvent) {\n\t\t\t\t\t\t\t\t\tlet syntheticEvent = ownerDoc.createEvent(\"MouseEvents\");\n\t\t\t\t\t\t\t\t\tsyntheticEvent.initMouseEvent(\"click\", true, true, _win, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);\n\t\t\t\t\t\t\t\t\te.target.dispatchEvent(syntheticEvent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.isDragging = self.isGesturing = self.isPressed = false;\n\t\t\t\tonStop && !isNormalizer && onStopDelayedCall.restart(true);\n\t\t\t\tonDragEnd && wasDragging && onDragEnd(self);\n\t\t\t\tonRelease && onRelease(self, wasDragging);\n\t\t\t},\n\t\t\t_onGestureStart = e => e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging),\n\t\t\t_onGestureEnd = () => (self.isGesturing = false) || onGestureEnd(self),\n\t\t\tonScroll = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\tlet x = scrollFuncX(),\n\t\t\t\t\ty = scrollFuncY();\n\t\t\t\tonDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);\n\t\t\t\tscrollX = x;\n\t\t\t\tscrollY = y;\n\t\t\t\tonStop && onStopDelayedCall.restart(true);\n\t\t\t},\n\t\t\t_onWheel = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\te = _getEvent(e, preventDefault);\n\t\t\t\tonWheel && (wheeled = true);\n\t\t\t\tlet multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;\n\t\t\t\tonDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);\n\t\t\t\tonStop && !isNormalizer && onStopDelayedCall.restart(true);\n\t\t\t},\n\t\t\t_onMove = e => {\n\t\t\t\tif (_ignoreCheck(e)) {return;}\n\t\t\t\tlet x = e.clientX,\n\t\t\t\t\ty = e.clientY,\n\t\t\t\t\tdx = x - self.x,\n\t\t\t\t\tdy = y - self.y;\n\t\t\t\tself.x = x;\n\t\t\t\tself.y = y;\n\t\t\t\tmoved = true;\n\t\t\t\t(dx || dy) && onTouchOrPointerDelta(dx, dy);\n\t\t\t},\n\t\t\t_onHover = e => {self.event = e; onHover(self);},\n\t\t\t_onHoverEnd = e => {self.event = e; onHoverEnd(self);},\n\t\t\t_onClick = e => _ignoreCheck(e) || (_getEvent(e, preventDefault) && onClick(self));\n\n\t\tonStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();\n\n\t\tself.deltaX = self.deltaY = 0;\n\t\tself._vx = _getVelocityProp(0, 50, true);\n\t\tself._vy = _getVelocityProp(0, 50, true);\n\t\tself.scrollX = scrollFuncX;\n\t\tself.scrollY = scrollFuncY;\n\t\tself.isDragging = self.isGesturing = self.isPressed = false;\n\t\tself.enable = e => {\n\t\t\tif (!self.isEnabled) {\n\t\t\t\t_addListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\t\t\t\ttype.indexOf(\"scroll\") >= 0 && _addListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, preventDefault, capture);\n\t\t\t\ttype.indexOf(\"wheel\") >= 0 && _addListener(target, \"wheel\", _onWheel, preventDefault, capture);\n\t\t\t\tif ((type.indexOf(\"touch\") >= 0 && _isTouch) || type.indexOf(\"pointer\") >= 0) {\n\t\t\t\t\t_addListener(target, _eventTypes[0], _onPress, preventDefault, capture);\n\t\t\t\t\t_addListener(ownerDoc, _eventTypes[2], _onRelease);\n\t\t\t\t\t_addListener(ownerDoc, _eventTypes[3], _onRelease);\n\t\t\t\t\tallowClicks && _addListener(target, \"click\", clickCapture, false, true);\n\t\t\t\t\tonClick && _addListener(target, \"click\", _onClick);\n\t\t\t\t\tonGestureStart && _addListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\t\t\t\t\tonGestureEnd && _addListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\t\t\t\t\tonHover && _addListener(target, _pointerType + \"enter\", _onHover);\n\t\t\t\t\tonHoverEnd && _addListener(target, _pointerType + \"leave\", _onHoverEnd);\n\t\t\t\t\tonMove && _addListener(target, _pointerType + \"move\", _onMove);\n\t\t\t\t}\n\t\t\t\tself.isEnabled = true;\n\t\t\t\te && e.type && _onPress(e);\n\t\t\t\tonEnable && onEnable(self);\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\t\tself.disable = () => {\n\t\t\tif (self.isEnabled) {\n\t\t\t\t// only remove the _onScroll listener if there aren't any others that rely on the functionality.\n\t\t\t\t_observers.filter(o => o !== self && _isViewport(o.target)).length || _removeListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\t\t\t\tif (self.isPressed) {\n\t\t\t\t\tself._vx.reset();\n\t\t\t\t\tself._vy.reset();\n\t\t\t\t\t_removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag);\n\t\t\t\t}\n\t\t\t\t_removeListener(isViewport ? ownerDoc : target, \"scroll\", onScroll);\n\t\t\t\t_removeListener(target, \"wheel\", _onWheel);\n\t\t\t\t_removeListener(target, _eventTypes[0], _onPress);\n\t\t\t\t_removeListener(ownerDoc, _eventTypes[2], _onRelease);\n\t\t\t\t_removeListener(ownerDoc, _eventTypes[3], _onRelease);\n\t\t\t\t_removeListener(target, \"click\", clickCapture);\n\t\t\t\t_removeListener(target, \"click\", _onClick);\n\t\t\t\t_removeListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\t\t\t\t_removeListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\t\t\t\t_removeListener(target, _pointerType + \"enter\", _onHover);\n\t\t\t\t_removeListener(target, _pointerType + \"leave\", _onHoverEnd);\n\t\t\t\t_removeListener(target, _pointerType + \"move\", _onMove);\n\t\t\t\tself.isEnabled = self.isPressed = self.isDragging = false;\n\t\t\t\tonDisable && onDisable(self);\n\t\t\t}\n\t\t};\n\n\t\tself.kill = () => {\n\t\t\tself.disable();\n\t\t\tlet i = _observers.indexOf(self);\n\t\t\ti >= 0 && _observers.splice(i, 1);\n\t\t\t_normalizer === self && (_normalizer = 0);\n\t\t}\n\n\t\t_observers.push(self);\n\t\tisNormalizer && _isViewport(target) && (_normalizer = self);\n\n\t\tself.enable(event);\n\t}\n\n\tget velocityX() {\n\t\treturn this._vx.getVelocity();\n\t}\n\tget velocityY() {\n\t\treturn this._vy.getVelocity();\n\t}\n\n}\n\nObserver.version = \"3.10.3\";\nObserver.create = vars => new Observer(vars);\nObserver.register = _initCore;\nObserver.getAll = () => _observers.slice();\nObserver.getById = id => _observers.filter(o => o.vars.id === id)[0];\n\n_getGSAP() && gsap.registerPlugin(Observer);\n\nexport { Observer as default, _isViewport, _scrollers, _getScrollFunc, _getProxyProp, _proxies, _getVelocityProp, _vertical, _horizontal, _getTarget };","/*!\n * ScrollTrigger 3.10.3\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport { Observer, _getTarget, _vertical, _horizontal, _scrollers, _proxies, _getScrollFunc, _getProxyProp, _getVelocityProp } from \"./Observer.js\";\n\nlet gsap, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp, _i, _prevWidth, _prevHeight, _autoRefresh, _sort, _suppressOverwrites, _ignoreResize, _normalizer, _ignoreMobileResize, _baseScreenHeight, _baseScreenWidth,\n\t_limitCallbacks, // if true, we'll only trigger callbacks if the active state toggles, so if you scroll immediately past both the start and end positions of a ScrollTrigger (thus inactive to inactive), neither its onEnter nor onLeave will be called. This is useful during startup.\n\t_startup = 1,\n\t_getTime = Date.now,\n\t_time1 = _getTime(),\n\t_lastScrollTime = 0,\n\t_enabled = 0,\n\t_pointerDownHandler = () => _pointerIsDown = 1,\n\t_pointerUpHandler = () => _pointerIsDown = 0,\n\t_passThrough = v => v,\n\t_round = value => Math.round(value * 100000) / 100000 || 0,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isViewport = e => !!~_root.indexOf(e),\n\t_getBoundsFunc = element => _getProxyProp(element, \"getBoundingClientRect\") || (_isViewport(element) ? () => {_winOffsets.width = _win.innerWidth; _winOffsets.height = _win.innerHeight; return _winOffsets;} : () => _getBounds(element)),\n\t_getSizeFunc = (scroller, isViewport, {d, d2, a}) => (a = _getProxyProp(scroller, \"getBoundingClientRect\")) ? () => a()[d] : () => (isViewport ? _win[\"inner\" + d2] : scroller[\"client\" + d2]) || 0,\n\t_getOffsetsFunc = (element, isViewport) => !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : () => _winOffsets,\n\t_maxScroll = (element, {s, d2, d, a}) => (s = \"scroll\" + d2) && (a = _getProxyProp(element, s)) ? a() - _getBoundsFunc(element)()[d] : _isViewport(element) ? (_docEl[s] || _body[s]) - (_win[\"inner\" + d2] || _docEl[\"client\" + d2] || _body[\"client\" + d2]) : element[s] - element[\"offset\" + d2],\n\t_iterateAutoRefresh = (func, events) => {\n\t\tfor (let i = 0; i < _autoRefresh.length; i += 3) {\n\t\t\t(!events || ~events.indexOf(_autoRefresh[i+1])) && func(_autoRefresh[i], _autoRefresh[i+1], _autoRefresh[i+2]);\n\t\t}\n\t},\n\t_isString = value => typeof(value) === \"string\",\n\t_isFunction = value => typeof(value) === \"function\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isObject = value => typeof(value) === \"object\",\n\t_callIfFunc = value => _isFunction(value) && value(),\n\t_combineFunc = (f1, f2) => () => {\n\t\tlet result1 = _callIfFunc(f1),\n\t\t\tresult2 = _callIfFunc(f2);\n\t\treturn () => {\n\t\t\t_callIfFunc(result1);\n\t\t\t_callIfFunc(result2);\n\t\t}\n\t},\n\t_endAnimation = (animation, reversed, pause) => animation && animation.progress(reversed ? 0 : 1) && pause && animation.pause(),\n\t_callback = (self, func) => {\n\t\tif (self.enabled) {\n\t\t\tlet result = func(self);\n\t\t\tresult && result.totalTime && (self.callbackAnimation = result);\n\t\t}\n\t},\n\t_abs = Math.abs,\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_left = \"left\",\n\t_top = \"top\",\n\t_right = \"right\",\n\t_bottom = \"bottom\",\n\t_width = \"width\",\n\t_height = \"height\",\n\t_Right = \"Right\",\n\t_Left = \"Left\",\n\t_Top = \"Top\",\n\t_Bottom = \"Bottom\",\n\t_padding = \"padding\",\n\t_margin = \"margin\",\n\t_Width = \"Width\",\n\t_Height = \"Height\",\n\t_px = \"px\",\n\t_getComputedStyle = element => _win.getComputedStyle(element),\n\t_makePositionable = element => { // if the element already has position: absolute or fixed, leave that, otherwise make it position: relative\n\t\tlet position = _getComputedStyle(element).position;\n\t\telement.style.position = (position === \"absolute\" || position === \"fixed\") ? position : \"relative\";\n\t},\n\t_setDefaults = (obj, defaults) => {\n\t\tfor (let p in defaults) {\n\t\t\t(p in obj) || (obj[p] = defaults[p]);\n\t\t}\n\t\treturn obj;\n\t},\n\t_getBounds = (element, withoutTransforms) => {\n\t\tlet tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0}).progress(1),\n\t\t\tbounds = element.getBoundingClientRect();\n\t\ttween && tween.progress(0).kill();\n\t\treturn bounds;\n\t},\n\t_getSize = (element, {d2}) => element[\"offset\" + d2] || element[\"client\" + d2] || 0,\n\t_getLabelRatioArray = timeline => {\n\t\tlet a = [],\n\t\t\tlabels = timeline.labels,\n\t\t\tduration = timeline.duration(),\n\t\t\tp;\n\t\tfor (p in labels) {\n\t\t\ta.push(labels[p] / duration);\n\t\t}\n\t\treturn a;\n\t},\n\t_getClosestLabel = animation => value => gsap.utils.snap(_getLabelRatioArray(animation), value),\n\t_snapDirectional = snapIncrementOrArray => {\n\t\tlet snap = gsap.utils.snap(snapIncrementOrArray),\n\t\t\ta = Array.isArray(snapIncrementOrArray) && snapIncrementOrArray.slice(0).sort((a, b) => a - b);\n\t\treturn a ? (value, direction, threshold= 1e-3) => {\n\t\t\tlet i;\n\t\t\tif (!direction) {\n\t\t\t\treturn snap(value);\n\t\t\t}\n\t\t\tif (direction > 0) {\n\t\t\t\tvalue -= threshold; // to avoid rounding errors. If we're too strict, it might snap forward, then immediately again, and again.\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\tif (a[i] >= value) {\n\t\t\t\t\t\treturn a[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn a[i-1];\n\t\t\t} else {\n\t\t\t\ti = a.length;\n\t\t\t\tvalue += threshold;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (a[i] <= value) {\n\t\t\t\t\t\treturn a[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a[0];\n\t\t} : (value, direction, threshold= 1e-3) => {\n\t\t\tlet snapped = snap(value);\n\t\t\treturn !direction || Math.abs(snapped - value) < threshold || ((snapped - value < 0) === direction < 0) ? snapped : snap(direction < 0 ? value - snapIncrementOrArray : value + snapIncrementOrArray);\n\t\t};\n\t},\n\t_getLabelAtDirection = timeline => (value, st) => _snapDirectional(_getLabelRatioArray(timeline))(value, st.direction),\n\t_multiListener = (func, element, types, callback) => types.split(\",\").forEach(type => func(element, type, callback)),\n\t_addListener = (element, type, func, nonPassive, capture) => element.addEventListener(type, func, {passive: !nonPassive, capture: !!capture}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_wheelListener = (func, el, scrollFunc) => scrollFunc && scrollFunc.wheelHandler && func(el, \"wheel\", scrollFunc),\n\t_markerDefaults = {startColor: \"green\", endColor: \"red\", indent: 0, fontSize: \"16px\", fontWeight:\"normal\"},\n\t_defaults = {toggleActions: \"play\", anticipatePin: 0},\n\t_keywords = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1},\n\t_offsetToPx = (value, size) => {\n\t\tif (_isString(value)) {\n\t\t\tlet eqIndex = value.indexOf(\"=\"),\n\t\t\t\trelative = ~eqIndex ? +(value.charAt(eqIndex-1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\t\t\tif (~eqIndex) {\n\t\t\t\t(value.indexOf(\"%\") > eqIndex) && (relative *= size / 100);\n\t\t\t\tvalue = value.substr(0, eqIndex-1);\n\t\t\t}\n\t\t\tvalue = relative + ((value in _keywords) ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n\t\t}\n\t\treturn value;\n\t},\n\t_createMarker = (type, name, container, direction, {startColor, endColor, fontSize, indent, fontWeight}, offset, matchWidthEl, containerAnimation) => {\n\t\tlet e = _doc.createElement(\"div\"),\n\t\t\tuseFixedPosition = _isViewport(container) || _getProxyProp(container, \"pinType\") === \"fixed\",\n\t\t\tisScroller = type.indexOf(\"scroller\") !== -1,\n\t\t\tparent = useFixedPosition ? _body : container,\n\t\t\tisStart = type.indexOf(\"start\") !== -1,\n\t\t\tcolor = isStart ? startColor : endColor,\n\t\t\tcss = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\t\tcss += \"position:\" + ((isScroller || containerAnimation) && useFixedPosition ? \"fixed;\" : \"absolute;\");\n\t\t(isScroller || containerAnimation || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n\t\tmatchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n\t\te._isStart = isStart;\n\t\te.setAttribute(\"class\", \"gsap-marker-\" + type + (name ? \" marker-\" + name : \"\"));\n\t\te.style.cssText = css;\n\t\te.innerText = name || name === 0 ? type + \"-\" + name : type;\n\t\tparent.children[0] ? parent.insertBefore(e, parent.children[0]) : parent.appendChild(e);\n\t\te._offset = e[\"offset\" + direction.op.d2];\n\t\t_positionMarker(e, 0, direction, isStart);\n\t\treturn e;\n\t},\n\t_positionMarker = (marker, start, direction, flipped) => {\n\t\tlet vars = {display: \"block\"},\n\t\t\tside = direction[flipped ? \"os2\" : \"p2\"],\n\t\t\toppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n\t\tmarker._isFlipped = flipped;\n\t\tvars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n\t\tvars[direction.a] = flipped ? \"1px\" : 0;\n\t\tvars[\"border\" + side + _Width] = 1;\n\t\tvars[\"border\" + oppositeSide + _Width] = 0;\n\t\tvars[direction.p] = start + \"px\";\n\t\tgsap.set(marker, vars);\n\t},\n\t_triggers = [],\n\t_ids = {},\n\t_rafID,\n\t_sync = () => _getTime() - _lastScrollTime > 34 && _updateAll(),\n\t_onScroll = () => { // previously, we tried to optimize performance by batching/deferring to the next requestAnimationFrame(), but discovered that Safari has a few bugs that make this unworkable (especially on iOS). See https://codepen.io/GreenSock/pen/16c435b12ef09c38125204818e7b45fc?editors=0010 and https://codepen.io/GreenSock/pen/JjOxYpQ/3dd65ccec5a60f1d862c355d84d14562?editors=0010 and https://codepen.io/GreenSock/pen/ExbrPNa/087cef197dc35445a0951e8935c41503?editors=0010\n\t\tif (!_normalizer || !_normalizer.isPressed) {\n\t\t\t_scrollers.cache++\n\t\t\t_rafID || (_rafID = requestAnimationFrame(_updateAll));\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t}\n\t},\n\t_setBaseDimensions = () => {\n\t\t_baseScreenWidth = _win.innerWidth;\n\t\t_baseScreenHeight = _win.innerHeight;\n\t},\n\t_onResize = () => {\n\t\t_scrollers.cache++;\n\t\t!_refreshing && !_ignoreResize && !_doc.fullscreenElement && (!_ignoreMobileResize || _baseScreenWidth !== _win.innerWidth || Math.abs(_win.innerHeight - _baseScreenHeight) > _win.innerHeight * 0.25) && _resizeDelay.restart(true);\n\t}, // ignore resizes triggered by refresh()\n\t_listeners = {},\n\t_emptyArray = [],\n\t_media = [],\n\t_creatingMedia, // when ScrollTrigger.matchMedia() is called, we record the current media key here (like \"(min-width: 800px)\") so that we can assign it to everything that's created during that call. Then we can revert just those when necessary. In the ScrollTrigger's init() call, the _creatingMedia is recorded as a \"media\" property on the instance.\n\t_lastMediaTick,\n\t_onMediaChange = e => {\n\t\tlet tick = gsap.ticker.frame,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tindex;\n\t\tif (_lastMediaTick !== tick || _startup) {\n\t\t\t_revertAll();\n\t\t\tfor (; i < _media.length; i+=4) {\n\t\t\t\tindex = _win.matchMedia(_media[i]).matches;\n\t\t\t\tif (index !== _media[i+3]) { // note: some browsers fire the matchMedia event multiple times, like when going full screen, so we shouldn't call the function multiple times. Check to see if it's already matched.\n\t\t\t\t\t_media[i+3] = index;\n\t\t\t\t\tindex ? matches.push(i) : _revertAll(1, _media[i]) || (_isFunction(_media[i+2]) && _media[i+2]()); // Firefox doesn't update the \"matches\" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.\n\t\t\t\t}\n\t\t\t}\n\t\t\t_revertRecorded(); // in case killing/reverting any of the animations actually added inline styles back.\n\t\t\tfor (i = 0; i < matches.length; i++) {\n\t\t\t\tindex = matches[i];\n\t\t\t\t_creatingMedia = _media[index];\n\t\t\t\t_media[index+2] = _media[index+1](e);\n\t\t\t}\n\t\t\t_creatingMedia = 0;\n\t\t\t_coreInitted && _refreshAll(0, 1);\n\t\t\t_lastMediaTick = tick;\n\t\t\t_dispatch(\"matchMedia\");\n\t\t}\n\t},\n\t_softRefresh = () => _removeListener(ScrollTrigger, \"scrollEnd\", _softRefresh) || _refreshAll(true),\n\t_dispatch = type => (_listeners[type] && _listeners[type].map(f => f())) || _emptyArray,\n\t_savedStyles = [], // when ScrollTrigger.saveStyles() is called, the inline styles are recorded in this Array in a sequential format like [element, cssText, gsCache, media]. This keeps it very memory-efficient and fast to iterate through.\n\t_revertRecorded = media => {\n\t\tfor (let i = 0; i < _savedStyles.length; i+=5) {\n\t\t\tif (!media || _savedStyles[i+4] === media) {\n\t\t\t\t_savedStyles[i].style.cssText = _savedStyles[i+1];\n\t\t\t\t_savedStyles[i].getBBox && _savedStyles[i].setAttribute(\"transform\", _savedStyles[i+2] || \"\");\n\t\t\t\t_savedStyles[i+3].uncache = 1;\n\t\t\t}\n\t\t}\n\t},\n\t_revertAll = (kill, media) => {\n\t\tlet trigger;\n\t\tfor (_i = 0; _i < _triggers.length; _i++) {\n\t\t\ttrigger = _triggers[_i];\n\t\t\tif (!media || trigger.media === media) {\n\t\t\t\tif (kill) {\n\t\t\t\t\ttrigger.kill(1);\n\t\t\t\t} else {\n\t\t\t\t\ttrigger.revert();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmedia && _revertRecorded(media);\n\t\tmedia || _dispatch(\"revert\");\n\t},\n\t_clearScrollMemory = () => _scrollers.cache++ && _scrollers.forEach(obj => typeof(obj) === \"function\" && (obj.rec = 0)), // zero-out all the recorded scroll positions. Don't use _triggers because if, for example, .matchMedia() is used to create some ScrollTriggers and then the user resizes and it removes ALL ScrollTriggers, and then go back to a size where there are ScrollTriggers, it would have kept the position(s) saved from the initial state.\n\t_refreshingAll,\n\t_refreshID = 0,\n\t_refreshAll = (force, skipRevert) => {\n\t\tif (_lastScrollTime && !force) {\n\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\treturn;\n\t\t}\n\t\t_refreshingAll = true;\n\t\tlet refreshInits = _dispatch(\"refreshInit\");\n\t\t_sort && ScrollTrigger.sort();\n\t\tskipRevert || _revertAll();\n\t\t_triggers.slice(0).forEach(t => t.refresh()) // don't loop with _i because during a refresh() someone could call ScrollTrigger.update() which would iterate through _i resulting in a skip.\n\t\t_triggers.forEach(t => t.vars.end === \"max\" && t.setPositions(t.start, _maxScroll(t.scroller, t._dir))); // the scroller's max scroll position may change after all the ScrollTriggers refreshed (like pinning could push it down), so we need to loop back and correct any with end: \"max\".\n\t\trefreshInits.forEach(result => result && result.render && result.render(-1)); // if the onRefreshInit() returns an animation (typically a gsap.set()), revert it. This makes it easy to put things in a certain spot before refreshing for measurement purposes, and then put things back.\n\t\t_clearScrollMemory();\n\t\t_resizeDelay.pause();\n\t\t_refreshID++;\n\t\t_refreshingAll = false;\n\t\t_dispatch(\"refresh\");\n\t},\n\t_lastScroll = 0,\n\t_direction = 1,\n\t_primary,\n\t_updateAll = () => {\n\t\tif (!_refreshingAll) {\n\t\t\t_primary && _primary.update(0); // ScrollSmoother users refreshPriority -9999 to become the primary that gets updated before all others because it affects the scroll position.\n\t\t\tScrollTrigger.isUpdating = true;\n\t\t\tlet l = _triggers.length,\n\t\t\t\ttime = _getTime(),\n\t\t\t\trecordVelocity = time - _time1 >= 50,\n\t\t\t\tscroll = l && _triggers[0].scroll();\n\t\t\t_direction = _lastScroll > scroll ? -1 : 1;\n\t\t\t_lastScroll = scroll;\n\t\t\tif (recordVelocity) {\n\t\t\t\tif (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n\t\t\t\t\t_lastScrollTime = 0;\n\t\t\t\t\t_dispatch(\"scrollEnd\");\n\t\t\t\t}\n\t\t\t\t_time2 = _time1;\n\t\t\t\t_time1 = time;\n\t\t\t}\n\t\t\tif (_direction < 0) {\n\t\t\t\t_i = l;\n\t\t\t\twhile (_i-- > 0) {\n\t\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t\t}\n\t\t\t\t_direction = 1;\n\t\t\t} else {\n\t\t\t\tfor (_i = 0; _i < l; _i++) {\n\t\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t\t}\n\t\t\t}\n\t\t\tScrollTrigger.isUpdating = false;\n\t\t}\n\t\t_rafID = 0;\n\t},\n\t_propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\", \"float\", \"zIndex\", \"gridColumnStart\", \"gridColumnEnd\", \"gridRowStart\", \"gridRowEnd\", \"gridArea\", \"justifySelf\", \"alignSelf\", \"placeSelf\", \"order\"],\n\t_stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n\t_swapPinOut = (pin, spacer, state) => {\n\t\t_setState(state);\n\t\tlet cache = pin._gsap;\n\t\tif (cache.spacerIsNative) {\n\t\t\t_setState(cache.spacerState);\n\t\t} else if (pin.parentNode === spacer) {\n\t\t\tlet parent = spacer.parentNode;\n\t\t\tif (parent) {\n\t\t\t\tparent.insertBefore(pin, spacer);\n\t\t\t\tparent.removeChild(spacer);\n\t\t\t}\n\t\t}\n\t},\n\t_swapPinIn = (pin, spacer, cs, spacerState) => {\n\t\tif (pin.parentNode !== spacer) {\n\t\t\tlet i = _propNamesToCopy.length,\n\t\t\t\tspacerStyle = spacer.style,\n\t\t\t\tpinStyle = pin.style,\n\t\t\t\tp;\n\t\t\twhile (i--) {\n\t\t\t\tp = _propNamesToCopy[i];\n\t\t\t\tspacerStyle[p] = cs[p];\n\t\t\t}\n\t\t\tspacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n\t\t\t(cs.display === \"inline\") && (spacerStyle.display = \"inline-block\");\n\t\t\tpinStyle[_bottom] = pinStyle[_right] = spacerStyle.flexBasis = \"auto\";\n\t\t\tspacerStyle.overflow = \"visible\";\n\t\t\tspacerStyle.boxSizing = \"border-box\";\n\t\t\tspacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n\t\t\tspacerStyle[_height] = _getSize(pin, _vertical) + _px;\n\t\t\tspacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\t\t\t_setState(spacerState);\n\t\t\tpinStyle[_width] = pinStyle[\"max\" + _Width] = cs[_width];\n\t\t\tpinStyle[_height] = pinStyle[\"max\" + _Height] = cs[_height];\n\t\t\tpinStyle[_padding] = cs[_padding];\n\t\t\tpin.parentNode.insertBefore(spacer, pin);\n\t\t\tspacer.appendChild(pin);\n\t\t}\n\t},\n\t_capsExp = /([A-Z])/g,\n\t_setState = state => {\n\t\tif (state) {\n\t\t\tlet style = state.t.style,\n\t\t\t\tl = state.length,\n\t\t\t\ti = 0,\n\t\t\t\tp, value;\n\t\t\t(state.t._gsap || gsap.core.getCache(state.t)).uncache = 1; // otherwise transforms may be off\n\t\t\tfor (; i < l; i +=2) {\n\t\t\t\tvalue = state[i+1];\n\t\t\t\tp = state[i];\n\t\t\t\tif (value) {\n\t\t\t\t\tstyle[p] = value;\n\t\t\t\t} else if (style[p]) {\n\t\t\t\t\tstyle.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_getState = element => { // returns an Array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n\t\tlet l = _stateProps.length,\n\t\t\tstyle = element.style,\n\t\t\tstate = [],\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\tstate.push(_stateProps[i], style[_stateProps[i]]);\n\t\t}\n\t\tstate.t = element;\n\t\treturn state;\n\t},\n\t_copyState = (state, override, omitOffsets) => {\n\t\tlet result = [],\n\t\t\tl = state.length,\n\t\t\ti = omitOffsets ? 8 : 0, // skip top, left, right, bottom if omitOffsets is true\n\t\t\tp;\n\t\tfor (; i < l; i += 2) {\n\t\t\tp = state[i];\n\t\t\tresult.push(p, (p in override) ? override[p] : state[i+1]);\n\t\t}\n\t\tresult.t = state.t;\n\t\treturn result;\n\t},\n\t_winOffsets = {left:0, top:0},\n\t// // potential future feature (?) Allow users to calculate where a trigger hits (scroll position) like getScrollPosition(\"#id\", \"top bottom\")\n\t// _getScrollPosition = (trigger, position, {scroller, containerAnimation, horizontal}) => {\n\t// \tscroller = _getTarget(scroller || _win);\n\t// \tlet direction = horizontal ? _horizontal : _vertical,\n\t// \t\tisViewport = _isViewport(scroller);\n\t// \t_getSizeFunc(scroller, isViewport, direction);\n\t// \treturn _parsePosition(position, _getTarget(trigger), _getSizeFunc(scroller, isViewport, direction)(), direction, _getScrollFunc(scroller, direction)(), 0, 0, 0, _getOffsetsFunc(scroller, isViewport)(), isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0, 0, containerAnimation ? containerAnimation.duration() : _maxScroll(scroller), containerAnimation);\n\t// },\n\t_parsePosition = (value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, useFixedPosition, scrollerMax, containerAnimation) => {\n\t\t_isFunction(value) && (value = value(self));\n\t\tif (_isString(value) && value.substr(0,3) === \"max\") {\n\t\t\tvalue = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n\t\t}\n\t\tlet time = containerAnimation ? containerAnimation.time() : 0,\n\t\t\tp1, p2, element;\n\t\tcontainerAnimation && containerAnimation.seek(0);\n\t\tif (!_isNumber(value)) {\n\t\t\t_isFunction(trigger) && (trigger = trigger(self));\n\t\t\tlet offsets = value.split(\" \"),\n\t\t\t\tbounds, localOffset, globalOffset, display;\n\t\t\telement = _getTarget(trigger) || _body;\n\t\t\tbounds = _getBounds(element) || {};\n\t\t\tif ((!bounds || (!bounds.left && !bounds.top)) && _getComputedStyle(element).display === \"none\") { // if display is \"none\", it won't report getBoundingClientRect() properly\n\t\t\t\tdisplay = element.style.display;\n\t\t\t\telement.style.display = \"block\";\n\t\t\t\tbounds = _getBounds(element);\n\t\t\t\tdisplay ? (element.style.display = display) : element.style.removeProperty(\"display\");\n\t\t\t}\n\t\t\tlocalOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n\t\t\tglobalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n\t\t\tvalue = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n\t\t\tmarkerScroller && _positionMarker(markerScroller, globalOffset, direction, (scrollerSize - globalOffset < 20 || (markerScroller._isStart && globalOffset > 20)));\n\t\t\tscrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n\t\t} else if (markerScroller) {\n\t\t\t_positionMarker(markerScroller, scrollerSize, direction, true);\n\t\t}\n\t\tif (marker) {\n\t\t\tlet position = value + scrollerSize,\n\t\t\t\tisStart = marker._isStart;\n\t\t\tp1 = \"scroll\" + direction.d2;\n\t\t\t_positionMarker(marker, position, direction, (isStart && position > 20) || (!isStart && (useFixedPosition ? Math.max(_body[p1], _docEl[p1]) : marker.parentNode[p1]) <= position + 1));\n\t\t\tif (useFixedPosition) {\n\t\t\t\tscrollerBounds = _getBounds(markerScroller);\n\t\t\t\tuseFixedPosition && (marker.style[direction.op.p] = (scrollerBounds[direction.op.p] - direction.op.m - marker._offset) + _px);\n\t\t\t}\n\t\t}\n\t\tif (containerAnimation && element) {\n\t\t\tp1 = _getBounds(element);\n\t\t\tcontainerAnimation.seek(scrollerMax);\n\t\t\tp2 = _getBounds(element);\n\t\t\tcontainerAnimation._caScrollDist = p1[direction.p] - p2[direction.p];\n\t\t\tvalue = value / (containerAnimation._caScrollDist) * scrollerMax;\n\t\t}\n\t\tcontainerAnimation && containerAnimation.seek(time);\n\t\treturn containerAnimation ? value : Math.round(value);\n\t},\n\t_prefixExp = /(webkit|moz|length|cssText|inset)/i,\n\t_reparent = (element, parent, top, left) => {\n\t\tif (element.parentNode !== parent) {\n\t\t\tlet style = element.style,\n\t\t\t\tp, cs;\n\t\t\tif (parent === _body) {\n\t\t\t\telement._stOrig = style.cssText; // record original inline styles so we can revert them later\n\t\t\t\tcs = _getComputedStyle(element);\n\t\t\t\tfor (p in cs) { // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n\t\t\t\t\tif (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n\t\t\t\t\t\tstyle[p] = cs[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.top = top;\n\t\t\t\tstyle.left = left;\n\t\t\t} else {\n\t\t\t\tstyle.cssText = element._stOrig;\n\t\t\t}\n\t\t\tgsap.core.getCache(element).uncache = 1;\n\t\t\tparent.appendChild(element);\n\t\t}\n\t},\n\t// _mergeAnimations = animations => {\n\t// \tlet tl = gsap.timeline({smoothChildTiming: true}).startTime(Math.min(...animations.map(a => a.globalTime(0))));\n\t// \tanimations.forEach(a => {let time = a.totalTime(); tl.add(a); a.totalTime(time); });\n\t// \ttl.smoothChildTiming = false;\n\t// \treturn tl;\n\t// },\n\n\t// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n\t_getTweenCreator = (scroller, direction) => {\n\t\tlet getScroll = _getScrollFunc(scroller, direction),\n\t\t\tprop = \"_scroll\" + direction.p2, // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n\t\t\tlastScroll1, lastScroll2,\n\t\t\tgetTween = (scrollTo, vars, initialValue, change1, change2) => {\n\t\t\t\tlet tween = getTween.tween,\n\t\t\t\t\tonComplete = vars.onComplete,\n\t\t\t\t\tmodifiers = {};\n\t\t\t\tinitialValue = initialValue || getScroll();\n\t\t\t\tchange2 = (change1 && change2) || 0; // if change1 is 0, we set that to the difference and ignore change2. Otherwise, there would be a compound effect.\n\t\t\t\tchange1 = change1 || (scrollTo - initialValue);\n\t\t\t\ttween && tween.kill();\n\t\t\t\tlastScroll1 = Math.round(initialValue);\n\t\t\t\tvars[prop] = scrollTo;\n\t\t\t\tvars.modifiers = modifiers;\n\t\t\t\tmodifiers[prop] = value => {\n\t\t\t\t\tvalue = _round(getScroll()); // round because in some [very uncommon] Windows environments, it can get reported with decimals even though it was set without.\n\t\t\t\t\tif (value !== lastScroll1 && value !== lastScroll2 && Math.abs(value - lastScroll1) > 2 && Math.abs(value - lastScroll2) > 2) { // if the user scrolls, kill the tween. iOS Safari intermittently misreports the scroll position, it may be the most recently-set one or the one before that! When Safari is zoomed (CMD-+), it often misreports as 1 pixel off too! So if we set the scroll position to 125, for example, it'll actually report it as 124.\n\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;\n\t\t\t\t\t}\n\t\t\t\t\tlastScroll2 = lastScroll1;\n\t\t\t\t\treturn (lastScroll1 = _round(value));\n\t\t\t\t};\n\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\tonComplete && onComplete.call(tween);\n\t\t\t\t};\n\t\t\t\ttween = getTween.tween = gsap.to(scroller, vars);\n\t\t\t\treturn tween;\n\t\t\t};\n\t\tscroller[prop] = getScroll;\n\t\tgetScroll.wheelHandler = () => getTween.tween && getTween.tween.kill() && (getTween.tween = 0);\n\t\t_addListener(scroller, \"wheel\", getScroll.wheelHandler); // Windows machines handle mousewheel scrolling in chunks (like \"3 lines per scroll\") meaning the typical strategy for cancelling the scroll isn't as sensitive. It's much more likely to match one of the previous 2 scroll event positions. So we kill any snapping as soon as there's a wheel event.\n\t\treturn getTween;\n\t};\n\n\n\n\nexport class ScrollTrigger {\n\n\tconstructor(vars, animation) {\n\t\t_coreInitted || ScrollTrigger.register(gsap) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n\t\tthis.init(vars, animation);\n\t}\n\n\tinit(vars, animation) {\n\t\tthis.progress = this.start = 0;\n\t\tthis.vars && this.kill(true, true); // in case it's being initted again\n\t\tif (!_enabled) {\n\t\t\tthis.update = this.refresh = this.kill = _passThrough;\n\t\t\treturn;\n\t\t}\n\t\tvars = _setDefaults((_isString(vars) || _isNumber(vars) || vars.nodeType) ? {trigger: vars} : vars, _defaults);\n\t\tlet {onUpdate, toggleClass, id, onToggle, onRefresh, scrub, trigger, pin, pinSpacing, invalidateOnRefresh, anticipatePin, onScrubComplete, onSnapComplete, once, snap, pinReparent, pinSpacer, containerAnimation, fastScrollEnd, preventOverlaps} = vars,\n\t\t\tdirection = vars.horizontal || (vars.containerAnimation && vars.horizontal !== false) ? _horizontal : _vertical,\n\t\t\tisToggle = !scrub && scrub !== 0,\n\t\t\tscroller = _getTarget(vars.scroller || _win),\n\t\t\tscrollerCache = gsap.core.getCache(scroller),\n\t\t\tisViewport = _isViewport(scroller),\n\t\t\tuseFixedPosition = (\"pinType\" in vars ? vars.pinType : _getProxyProp(scroller, \"pinType\") || (isViewport && \"fixed\")) === \"fixed\",\n\t\t\tcallbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n\t\t\ttoggleActions = isToggle && vars.toggleActions.split(\" \"),\n\t\t\tmarkers = \"markers\" in vars ? vars.markers : _defaults.markers,\n\t\t\tborderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n\t\t\tself = this,\n\t\t\tonRefreshInit = vars.onRefreshInit && (() => vars.onRefreshInit(self)),\n\t\t\tgetScrollerSize = _getSizeFunc(scroller, isViewport, direction),\n\t\t\tgetScrollerOffsets = _getOffsetsFunc(scroller, isViewport),\n\t\t\tlastSnap = 0,\n\t\t\tlastRefresh = 0,\n\t\t\tscrollFunc = _getScrollFunc(scroller, direction),\n\t\t\ttweenTo, pinCache, snapFunc, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars,\n\t\t\tchange, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, pinChange, spacingStart, spacerState, markerStartSetter,\n\t\t\tmarkerEndSetter, cs, snap1, snap2, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, prevProgress, prevScroll, prevAnimProgress, caMarkerSetter, customRevertReturn;\n\n\t\tself.media = _creatingMedia;\n\t\tself._dir = direction;\n\t\tanticipatePin *= 45;\n\t\tself.scroller = scroller;\n\t\tself.scroll = containerAnimation ? containerAnimation.time.bind(containerAnimation) : scrollFunc;\n\t\tscroll1 = scrollFunc();\n\t\tself.vars = vars;\n\t\tanimation = animation || vars.animation;\n\t\tif (\"refreshPriority\" in vars) {\n\t\t\t_sort = 1;\n\t\t\tvars.refreshPriority === -9999 && (_primary = self); // used by ScrollSmoother\n\t\t}\n\t\tscrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n\t\t\ttop: _getTweenCreator(scroller, _vertical),\n\t\t\tleft: _getTweenCreator(scroller, _horizontal)\n\t\t};\n\t\tself.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\t\tself.scrubDuration = value => {\n\t\t\tscrubSmooth = _isNumber(value) && value;\n\t\t\tif (!scrubSmooth) {\n\t\t\t\tscrubTween && scrubTween.progress(1).kill();\n\t\t\t\tscrubTween = 0;\n\t\t\t} else {\n\t\t\t\tscrubTween ? scrubTween.duration(value) : (scrubTween = gsap.to(animation, {ease: \"expo\", totalProgress: \"+=0.001\", duration: scrubSmooth, paused: true, onComplete: () => onScrubComplete && onScrubComplete(self)}));\n\t\t\t}\n\t\t};\n\t\tif (animation) {\n\t\t\tanimation.vars.lazy = false;\n\t\t\tanimation._initted || (animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.render(0, true, true));\n\t\t\tself.animation = animation.pause();\n\t\t\tanimation.scrollTrigger = self;\n\t\t\tself.scrubDuration(scrub);\n\t\t\tsnap1 = 0;\n\t\t\tid || (id = animation.vars.id);\n\t\t}\n\t\t_triggers.push(self);\n\t\tif (snap) {\n\t\t\tif (!_isObject(snap) || snap.push) {\n\t\t\t\tsnap = {snapTo: snap};\n\t\t\t}\n\t\t\t(\"scrollBehavior\" in _body.style) && gsap.set(isViewport ? [_body, _docEl] : scroller, {scrollBehavior: \"auto\"}); // smooth scrolling doesn't work with snap.\n\t\t\tsnapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getClosestLabel(animation) : snap.snapTo === \"labelsDirectional\" ? _getLabelAtDirection(animation) : snap.directional !== false ? (value, st) => _snapDirectional(snap.snapTo)(value, _getTime() - lastRefresh < 500 ? 0 : st.direction) : gsap.utils.snap(snap.snapTo);\n\t\t\tsnapDurClamp = snap.duration || {min: 0.1, max: 2};\n\t\t\tsnapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n\t\t\tsnapDelayedCall = gsap.delayedCall(snap.delay || (scrubSmooth / 2) || 0.1, () => {\n\t\t\t\tlet scroll = scrollFunc(),\n\t\t\t\t\trefreshedRecently = _getTime() - lastRefresh < 500,\n\t\t\t\t\ttween = tweenTo.tween;\n\t\t\t\tif ((refreshedRecently || Math.abs(self.getVelocity()) < 10) && !tween && !_pointerIsDown && lastSnap !== scroll) {\n\t\t\t\t\tlet progress = (scroll - start) / change, // don't use self.progress because this might run between the refresh() and when the scroll position updates and self.progress is set properly in the update() method.\n\t\t\t\t\t\ttotalProgress = animation && !isToggle ? animation.totalProgress() : progress,\n\t\t\t\t\t\tvelocity = refreshedRecently ? 0 : ((totalProgress - snap2) / (_getTime() - _time2) * 1000) || 0,\n\t\t\t\t\t\tchange1 = gsap.utils.clamp(-progress, 1 - progress, _abs(velocity / 2) * velocity / 0.185),\n\t\t\t\t\t\tnaturalEnd = progress + (snap.inertia === false ? 0 : change1),\n\t\t\t\t\t\tendValue = _clamp(0, 1, snapFunc(naturalEnd, self)),\n\t\t\t\t\t\tendScroll = Math.round(start + endValue * change),\n\t\t\t\t\t\t{ onStart, onInterrupt, onComplete } = snap;\n\t\t\t\t\tif (scroll <= end && scroll >= start && endScroll !== scroll) {\n\t\t\t\t\t\tif (tween && !tween._initted && tween.data <= _abs(endScroll - scroll)) { // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (snap.inertia === false) {\n\t\t\t\t\t\t\tchange1 = endValue - progress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweenTo(endScroll, {\n\t\t\t\t\t\t\tduration: snapDurClamp(_abs( (Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05) || 0)),\n\t\t\t\t\t\t\tease: snap.ease || \"power3\",\n\t\t\t\t\t\t\tdata: _abs(endScroll - scroll), // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n\t\t\t\t\t\t\tonInterrupt: () => snapDelayedCall.restart(true) && onInterrupt && onInterrupt(self),\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tself.update();\n\t\t\t\t\t\t\t\tlastSnap = scrollFunc();\n\t\t\t\t\t\t\t\tsnap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n\t\t\t\t\t\t\t\tonSnapComplete && onSnapComplete(self);\n\t\t\t\t\t\t\t\tonComplete && onComplete(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, scroll, change1 * change, endScroll - scroll - change1 * change);\n\t\t\t\t\t\tonStart && onStart(self, tweenTo.tween);\n\t\t\t\t\t}\n\t\t\t\t} else if (self.isActive && lastSnap !== scroll) {\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t}).pause();\n\t\t}\n\t\tid && (_ids[id] = self);\n\t\ttrigger = self.trigger = _getTarget(trigger || pin);\n\n\t\t// if a trigger has some kind of scroll-related effect applied that could contaminate the \"y\" or \"x\" position (like a ScrollSmoother effect), we needed a way to temporarily revert it, so we use the stRevert property of the gsCache. It can return another function that we'll call at the end so it can return to its normal state.\n\t\tcustomRevertReturn = trigger && trigger._gsap && trigger._gsap.stRevert;\n\t\tcustomRevertReturn && (customRevertReturn = customRevertReturn(self));\n\n\t\tpin = pin === true ? trigger : _getTarget(pin);\n\t\t_isString(toggleClass) && (toggleClass = {targets: trigger, className: toggleClass});\n\t\tif (pin) {\n\t\t\t(pinSpacing === false || pinSpacing === _margin) || (pinSpacing = !pinSpacing && _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default.\n\t\t\tself.pin = pin;\n\t\t\tvars.force3D !== false && gsap.set(pin, {force3D: true});\n\t\t\tpinCache = gsap.core.getCache(pin);\n\t\t\tif (!pinCache.spacer) { // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n\t\t\t\tif (pinSpacer) {\n\t\t\t\t\tpinSpacer = _getTarget(pinSpacer);\n\t\t\t\t\tpinSpacer && !pinSpacer.nodeType && (pinSpacer = pinSpacer.current || pinSpacer.nativeElement); // for React & Angular\n\t\t\t\t\tpinCache.spacerIsNative = !!pinSpacer;\n\t\t\t\t\tpinSpacer && (pinCache.spacerState = _getState(pinSpacer));\n\t\t\t\t}\n\t\t\t\tpinCache.spacer = spacer = pinSpacer || _doc.createElement(\"div\");\n\t\t\t\tspacer.classList.add(\"pin-spacer\");\n\t\t\t\tid && spacer.classList.add(\"pin-spacer-\" + id);\n\t\t\t\tpinCache.pinState = pinOriginalState = _getState(pin);\n\t\t\t} else {\n\t\t\t\tpinOriginalState = pinCache.pinState;\n\t\t\t}\n\t\t\tself.spacer = spacer = pinCache.spacer;\n\t\t\tcs = _getComputedStyle(pin);\n\t\t\tspacingStart = cs[pinSpacing + direction.os2];\n\t\t\tpinGetter = gsap.getProperty(pin);\n\t\t\tpinSetter = gsap.quickSetter(pin, direction.a, _px);\n\t\t\t// pin.firstChild && !_maxScroll(pin, direction) && (pin.style.overflow = \"hidden\"); // protects from collapsing margins, but can have unintended consequences as demonstrated here: https://codepen.io/GreenSock/pen/1e42c7a73bfa409d2cf1e184e7a4248d so it was removed in favor of just telling people to set up their CSS to avoid the collapsing margins (overflow: hidden | auto is just one option. Another is border-top: 1px solid transparent).\n\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\tpinState = _getState(pin);\n\t\t}\n\t\tif (markers) {\n\t\t\tmarkerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n\t\t\tmarkerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n\t\t\tmarkerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n\t\t\toffset = markerStartTrigger[\"offset\" + direction.op.d2];\n\t\t\tlet content = _getTarget(_getProxyProp(scroller, \"content\") || scroller);\n\t\t\tmarkerStart = this.markerStart = _createMarker(\"start\", id, content, direction, markerVars, offset, 0, containerAnimation);\n\t\t\tmarkerEnd = this.markerEnd = _createMarker(\"end\", id, content, direction, markerVars, offset, 0, containerAnimation);\n\t\t\tcontainerAnimation && (caMarkerSetter = gsap.quickSetter([markerStart, markerEnd], direction.a, _px));\n\t\t\tif ((!useFixedPosition && !(_proxies.length && _getProxyProp(scroller, \"fixedMarkers\") === true))) {\n\t\t\t\t_makePositionable(isViewport ? _body : scroller);\n\t\t\t\tgsap.set([markerStartTrigger, markerEndTrigger], {force3D: true});\n\t\t\t\tmarkerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n\t\t\t\tmarkerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n\t\t\t}\n\t\t}\n\n\t\tif (containerAnimation) {\n\t\t\tlet oldOnUpdate = containerAnimation.vars.onUpdate,\n\t\t\t\toldParams = containerAnimation.vars.onUpdateParams;\n\t\t\tcontainerAnimation.eventCallback(\"onUpdate\", () => {\n\t\t\t\tself.update(0, 0, 1);\n\t\t\t\toldOnUpdate && oldOnUpdate.apply(oldParams || []);\n\t\t\t});\n\t\t}\n\n\t\tself.previous = () => _triggers[_triggers.indexOf(self) - 1];\n\t\tself.next = () => _triggers[_triggers.indexOf(self) + 1];\n\n\t\tself.revert = revert => {\n\t\t\tlet r = revert !== false || !self.enabled,\n\t\t\t\tprevRefreshing = _refreshing;\n\t\t\tif (r !== self.isReverted) {\n\t\t\t\tif (r) {\n\t\t\t\t\tself.scroll.rec || !_refreshing || !_refreshingAll || (self.scroll.rec = scrollFunc());\n\t\t\t\t\tprevScroll = Math.max(scrollFunc(), self.scroll.rec || 0); // record the scroll so we can revert later (repositioning/pinning things can affect scroll position). In the static refresh() method, we first record all the scroll positions as a reference.\n\t\t\t\t\tprevProgress = self.progress;\n\t\t\t\t\tprevAnimProgress = animation && animation.progress();\n\t\t\t\t}\n\t\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.style.display = r ? \"none\" : \"block\");\n\t\t\t\tr && (_refreshing = 1);\n\t\t\t\tself.update(r); // make sure the pin is back in its original position so that all the measurements are correct.\n\t\t\t\t_refreshing = prevRefreshing;\n\t\t\t\tpin && (r ? _swapPinOut(pin, spacer, pinOriginalState) : (!pinReparent || !self.isActive) && _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState));\n\t\t\t\tself.isReverted = r;\n\t\t\t}\n\t\t}\n\n\n\t\tself.refresh = (soft, force) => {\n\t\t\tif ((_refreshing || !self.enabled) && !force) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pin && soft && _lastScrollTime) {\n\t\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t!_refreshingAll && onRefreshInit && onRefreshInit(self);\n\t\t\t_refreshing = 1;\n\t\t\tlastRefresh = _getTime();\n\t\t\tif (tweenTo.tween) {\n\t\t\t\ttweenTo.tween.kill();\n\t\t\t\ttweenTo.tween = 0;\n\t\t\t}\n\t\t\tscrubTween && scrubTween.pause();\n\t\t\tinvalidateOnRefresh && animation && animation.time(-0.01, true).invalidate();\n\t\t\tself.isReverted || self.revert();\n\t\t\tlet size = getScrollerSize(),\n\t\t\t\tscrollerBounds = getScrollerOffsets(),\n\t\t\t\tmax = containerAnimation ? containerAnimation.duration() : _maxScroll(scroller, direction),\n\t\t\t\toffset = 0,\n\t\t\t\totherPinOffset = 0,\n\t\t\t\tparsedEnd = vars.end,\n\t\t\t\tparsedEndTrigger = vars.endTrigger || trigger,\n\t\t\t\tparsedStart = vars.start || (vars.start === 0 || !trigger ? 0 : (pin ? \"0 0\" : \"0 100%\")),\n\t\t\t\tpinnedContainer = self.pinnedContainer = vars.pinnedContainer && _getTarget(vars.pinnedContainer),\n\t\t\t\ttriggerIndex = (trigger && Math.max(0, _triggers.indexOf(self))) || 0,\n\t\t\t\ti = triggerIndex,\n\t\t\t\tcs, bounds, scroll, isVertical, override, curTrigger, curPin, oppositeScroll, initted, revertedPins;\n\t\t\twhile (i--) { // user might try to pin the same element more than once, so we must find any prior triggers with the same pin, revert them, and determine how long they're pinning so that we can offset things appropriately. Make sure we revert from last to first so that things \"rewind\" properly.\n\t\t\t\tcurTrigger = _triggers[i];\n\t\t\t\tcurTrigger.end || curTrigger.refresh(0, 1) || (_refreshing = 1); // if it's a timeline-based trigger that hasn't been fully initialized yet because it's waiting for 1 tick, just force the refresh() here, otherwise if it contains a pin that's supposed to affect other ScrollTriggers further down the page, they won't be adjusted properly.\n\t\t\t\tcurPin = curTrigger.pin;\n\t\t\t\tif (curPin && (curPin === trigger || curPin === pin) && !curTrigger.isReverted) {\n\t\t\t\t\trevertedPins || (revertedPins = []);\n\t\t\t\t\trevertedPins.unshift(curTrigger); // we'll revert from first to last to make sure things reach their end state properly\n\t\t\t\t\tcurTrigger.revert();\n\t\t\t\t}\n\t\t\t\tif (curTrigger !== _triggers[i]) { // in case it got removed.\n\t\t\t\t\ttriggerIndex--;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_isFunction(parsedStart) && (parsedStart = parsedStart(self));\n\t\t\tstart = _parsePosition(parsedStart, trigger, size, direction, scrollFunc(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation) || (pin ? -0.001 : 0);\n\t\t\t_isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\t\t\tif (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n\t\t\t\tif (~parsedEnd.indexOf(\" \")) {\n\t\t\t\t\tparsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n\t\t\t\t} else {\n\t\t\t\t\toffset = _offsetToPx(parsedEnd.substr(2), size);\n\t\t\t\t\tparsedEnd = _isString(parsedStart) ? parsedStart : start + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\t\t\t\t\tparsedEndTrigger = trigger;\n\t\t\t\t}\n\t\t\t}\n\t\t\tend = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, scrollFunc() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation)) || -0.001;\n\t\t\tchange = (end - start) || ((start -= 0.01) && 0.001);\n\n\t\t\toffset = 0;\n\t\t\ti = triggerIndex;\n\t\t\twhile (i--) {\n\t\t\t\tcurTrigger = _triggers[i];\n\t\t\t\tcurPin = curTrigger.pin;\n\t\t\t\tif (curPin && curTrigger.start - curTrigger._pinPush < start && !containerAnimation && curTrigger.end > 0) {\n\t\t\t\t\tcs = curTrigger.end - curTrigger.start;\n\t\t\t\t\tif ((curPin === trigger || curPin === pinnedContainer) && !_isNumber(parsedStart)) { // numeric start values shouldn't be offset at all - treat them as absolute\n\t\t\t\t\t\toffset += cs * (1 - curTrigger.progress);\n\t\t\t\t\t}\n\t\t\t\t\tcurPin === pin && (otherPinOffset += cs);\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart += offset;\n\t\t\tend += offset;\n\t\t\tself._pinPush = otherPinOffset;\n\t\t\tif (markerStart && offset) { // offset the markers if necessary\n\t\t\t\tcs = {};\n\t\t\t\tcs[direction.a] = \"+=\" + offset;\n\t\t\t\tpinnedContainer && (cs[direction.p] = \"-=\" + scrollFunc());\n\t\t\t\tgsap.set([markerStart, markerEnd], cs);\n\t\t\t}\n\n\t\t\tif (pin) {\n\t\t\t\tcs = _getComputedStyle(pin);\n\t\t\t\tisVertical = direction === _vertical;\n\t\t\t\tscroll = scrollFunc(); // recalculate because the triggers can affect the scroll\n\t\t\t\tpinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;\n\t\t\t\t!max && end > 1 && ((isViewport ? _body : scroller).style[\"overflow-\" + direction.a] = \"scroll\"); // makes sure the scroller has a scrollbar, otherwise if something has width: 100%, for example, it would be too big (exclude the scrollbar). See https://greensock.com/forums/topic/25182-scrolltrigger-width-of-page-increase-where-markers-are-set-to-false/\n\t\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\t\tpinState = _getState(pin);\n\t\t\t\t// transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\t\t\t\tbounds = _getBounds(pin, true);\n\t\t\t\toppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();\n\t\t\t\tif (pinSpacing) {\n\t\t\t\t\tspacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];\n\t\t\t\t\tspacerState.t = spacer;\n\t\t\t\t\ti = (pinSpacing === _padding) ? _getSize(pin, direction) + change + otherPinOffset : 0;\n\t\t\t\t\ti && spacerState.push(direction.d, i + _px); // for box-sizing: border-box (must include padding).\n\t\t\t\t\t_setState(spacerState);\n\t\t\t\t\tuseFixedPosition && scrollFunc(prevScroll);\n\t\t\t\t}\n\t\t\t\tif (useFixedPosition) {\n\t\t\t\t\toverride = {\n\t\t\t\t\t\ttop: (bounds.top + (isVertical ? scroll - start : oppositeScroll)) + _px,\n\t\t\t\t\t\tleft: (bounds.left + (isVertical ? oppositeScroll : scroll - start)) + _px,\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tposition: \"fixed\"\n\t\t\t\t\t};\n\t\t\t\t\toverride[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n\t\t\t\t\toverride[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n\t\t\t\t\toverride[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n\t\t\t\t\toverride[_padding] = cs[_padding];\n\t\t\t\t\toverride[_padding + _Top] = cs[_padding + _Top];\n\t\t\t\t\toverride[_padding + _Right] = cs[_padding + _Right];\n\t\t\t\t\toverride[_padding + _Bottom] = cs[_padding + _Bottom];\n\t\t\t\t\toverride[_padding + _Left] = cs[_padding + _Left];\n\t\t\t\t\tpinActiveState = _copyState(pinOriginalState, override, pinReparent);\n\t\t\t\t}\n\t\t\t\tif (animation) { // the animation might be affecting the transform, so we must jump to the end, check the value, and compensate accordingly. Otherwise, when it becomes unpinned, the pinSetter() will get set to a value that doesn't include whatever the animation did.\n\t\t\t\t\tinitted = animation._initted; // if not, we must invalidate() after this step, otherwise it could lock in starting values prematurely.\n\t\t\t\t\t_suppressOverwrites(1);\n\t\t\t\t\tanimation.render(animation.duration(), true, true);\n\t\t\t\t\tpinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;\n\t\t\t\t\tchange !== pinChange && pinActiveState.splice(pinActiveState.length - 2, 2); // transform is the last property/value set in the state Array. Since the animation is controlling that, we should omit it.\n\t\t\t\t\tanimation.render(0, true, true);\n\t\t\t\t\tinitted || animation.invalidate();\n\t\t\t\t\t_suppressOverwrites(0);\n\t\t\t\t} else {\n\t\t\t\t\tpinChange = change\n\t\t\t\t}\n\t\t\t} else if (trigger && scrollFunc() && !containerAnimation) { // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n\t\t\t\tbounds = trigger.parentNode;\n\t\t\t\twhile (bounds && bounds !== _body) {\n\t\t\t\t\tif (bounds._pinOffset) {\n\t\t\t\t\t\tstart -= bounds._pinOffset;\n\t\t\t\t\t\tend -= bounds._pinOffset;\n\t\t\t\t\t}\n\t\t\t\t\tbounds = bounds.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\trevertedPins && revertedPins.forEach(t => t.revert(false));\n\t\t\tself.start = start;\n\t\t\tself.end = end;\n\t\t\tscroll1 = scroll2 = scrollFunc(); // reset velocity\n\t\t\tif (!containerAnimation) {\n\t\t\t\tscroll1 < prevScroll && scrollFunc(prevScroll);\n\t\t\t\tself.scroll.rec = 0;\n\t\t\t}\n\t\t\tself.revert(false);\n\t\t\tif (snapDelayedCall)  {\n\t\t\t\tlastSnap = -1;\n\t\t\t\tself.isActive && scrollFunc(start + change * prevProgress); // just so snapping gets re-enabled, clear out any recorded last value\n\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t}\n\t\t\t_refreshing = 0;\n\t\t\tanimation && isToggle && (animation._initted || prevAnimProgress) && animation.progress() !== prevAnimProgress && animation.progress(prevAnimProgress, true).render(animation.time(), true, true); // must force a re-render because if saveStyles() was used on the target(s), the styles could have been wiped out during the refresh().\n\t\t\tif (prevProgress !== self.progress || containerAnimation) { // ensures that the direction is set properly (when refreshing, progress is set back to 0 initially, then back again to wherever it needs to be) and that callbacks are triggered.\n\t\t\t\tanimation && !isToggle && animation.totalProgress(prevProgress, true); // to avoid issues where animation callbacks like onStart aren't triggered.\n\t\t\t\tself.progress = prevProgress;\n\t\t\t\tself.update(0, 0, 1);\n\t\t\t}\n\t\t\tpin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * pinChange));\n//\t\t\tscrubTween && scrubTween.invalidate();\n\t\t\tonRefresh && onRefresh(self);\n\t\t};\n\n\t\tself.getVelocity = () => ((scrollFunc() - scroll2) / (_getTime() - _time2) * 1000) || 0;\n\n\t\tself.endAnimation = () => {\n\t\t\t_endAnimation(self.callbackAnimation);\n\t\t\tif (animation) {\n\t\t\t\tscrubTween ? scrubTween.progress(1) : (!animation.paused() ? _endAnimation(animation, animation.reversed()) : isToggle || _endAnimation(animation, self.direction < 0, 1));\n\t\t\t}\n\t\t};\n\n\t\tself.labelToScroll = label => animation && animation.labels && ((start || self.refresh() || start) + (animation.labels[label] / animation.duration()) * change) || 0;\n\n\t\tself.getTrailing = name => {\n\t\t\tlet i = _triggers.indexOf(self),\n\t\t\t\ta = self.direction > 0 ? _triggers.slice(0, i).reverse() : _triggers.slice(i+1);\n\t\t\treturn (_isString(name) ? a.filter(t => t.vars.preventOverlaps === name) : a).filter(t => self.direction > 0 ? t.end <= start : t.start >= end);\n\t\t};\n\n\n\t\tself.update = (reset, recordVelocity, forceFake) => {\n\t\t\tif (containerAnimation && !forceFake && !reset) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet scroll = self.scroll(),\n\t\t\t\tp = reset ? 0 : (scroll - start) / change,\n\t\t\t\tclipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n\t\t\t\tprevProgress = self.progress,\n\t\t\t\tisActive, wasActive, toggleState, action, stateChanged, toggled, isAtMax, isTakingAction;\n\t\t\tif (recordVelocity) {\n\t\t\t\tscroll2 = scroll1;\n\t\t\t\tscroll1 = containerAnimation ? scrollFunc() : scroll;\n\t\t\t\tif (snap) {\n\t\t\t\t\tsnap2 = snap1;\n\t\t\t\t\tsnap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\t\t\t(anticipatePin && !clipped && pin && !_refreshing && !_startup && _lastScrollTime && start < scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) && (clipped = 0.0001);\n\t\t\tif (clipped !== prevProgress && self.enabled) {\n\t\t\t\tisActive = self.isActive = !!clipped && clipped < 1;\n\t\t\t\twasActive = !!prevProgress && prevProgress < 1;\n\t\t\t\ttoggled = isActive !== wasActive;\n\t\t\t\tstateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\t\t\t\tself.direction = clipped > prevProgress ? 1 : -1;\n\t\t\t\tself.progress = clipped;\n\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\ttoggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack (we prioritize the FIRST encounter, thus if you scroll really fast past the onEnter and onLeave in one tick, it'd prioritize onEnter.\n\t\t\t\t\tif (isToggle) {\n\t\t\t\t\t\taction = (!toggled && toggleActions[toggleState + 1] !== \"none\" && toggleActions[toggleState + 1]) || toggleActions[toggleState]; // if it didn't toggle, that means it shot right past and since we prioritize the \"enter\" action, we should switch to the \"leave\" in this case (but only if one is defined)\n\t\t\t\t\t\tisTakingAction = animation && (action === \"complete\" || action === \"reset\" || action in animation);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpreventOverlaps && (toggled || isTakingAction) && (isTakingAction || scrub || !animation) && (_isFunction(preventOverlaps) ? preventOverlaps(self) : self.getTrailing(preventOverlaps).forEach(t => t.endAnimation()));\n\n\t\t\t\tif (!isToggle) {\n\t\t\t\t\tif (scrubTween && !_refreshing && !_startup) {\n\t\t\t\t\t\t(containerAnimation || (_primary && _primary !== self)) && scrubTween.render(scrubTween._dp._time - scrubTween._start); // if there's a scrub on both the container animation and this one (or a ScrollSmoother), the update order would cause this one not to have rendered yet, so it wouldn't make any progress before we .restart() it heading toward the new progress so it'd appear stuck thus we force a render here.\n\t\t\t\t\t\tif (scrubTween.resetTo) {\n\t\t\t\t\t\t\tscrubTween.resetTo(\"totalProgress\", clipped, animation._tTime / animation._tDur);\n\t\t\t\t\t\t} else { // legacy support (courtesy), before 3.10.0\n\t\t\t\t\t\t\tscrubTween.vars.totalProgress = clipped;\n\t\t\t\t\t\t\tscrubTween.invalidate().restart();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (animation) {\n\t\t\t\t\t\tanimation.totalProgress(clipped, !!_refreshing);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pin) {\n\t\t\t\t\treset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\t\t\t\t\tif (!useFixedPosition) {\n\t\t\t\t\t\tpinSetter(_round(pinStart + pinChange * clipped));\n\t\t\t\t\t} else if (stateChanged) {\n\t\t\t\t\t\tisAtMax = !reset && clipped > prevProgress && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\t\t\t\t\t\tif (pinReparent) {\n\t\t\t\t\t\t\tif (!reset && (isActive || isAtMax)) {\n\t\t\t\t\t\t\t\tlet bounds = _getBounds(pin, true),\n\t\t\t\t\t\t\t\t\toffset = scroll - start;\n\t\t\t\t\t\t\t\t_reparent(pin, _body, (bounds.top + (direction === _vertical ? offset : 0)) + _px, (bounds.left + (direction === _vertical ? 0 : offset)) + _px);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_reparent(pin, spacer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setState(isActive || isAtMax ? pinActiveState : pinState);\n\t\t\t\t\t\t(pinChange !== change && clipped < 1 && isActive) || pinSetter(pinStart + (clipped === 1 && !isAtMax ? pinChange : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsnap && !tweenTo.tween && !_refreshing && !_startup && snapDelayedCall.restart(true);\n\t\t\t\ttoggleClass && (toggled || (once && clipped && (clipped < 1 || !_limitCallbacks))) && _toArray(toggleClass.targets).forEach(el => el.classList[isActive || once ? \"add\" : \"remove\"](toggleClass.className)); // classes could affect positioning, so do it even if reset or refreshing is true.\n\t\t\t\tonUpdate && !isToggle && !reset && onUpdate(self);\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\tif (isToggle) {\n\t\t\t\t\t\tif (isTakingAction) {\n\t\t\t\t\t\t\tif (action === \"complete\") {\n\t\t\t\t\t\t\t\tanimation.pause().totalProgress(1);\n\t\t\t\t\t\t\t} else if (action === \"reset\") {\n\t\t\t\t\t\t\t\tanimation.restart(true).pause();\n\t\t\t\t\t\t\t} else if (action === \"restart\") {\n\t\t\t\t\t\t\t\tanimation.restart(true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation[action]();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate && onUpdate(self);\n\t\t\t\t\t}\n\t\t\t\t\tif (toggled || !_limitCallbacks) { // on startup, the page could be scrolled and we don't want to fire callbacks that didn't toggle. For example onEnter shouldn't fire if the ScrollTrigger isn't actually entered.\n\t\t\t\t\t\tonToggle && toggled && _callback(self, onToggle);\n\t\t\t\t\t\tcallbacks[toggleState] && _callback(self, callbacks[toggleState]);\n\t\t\t\t\t\tonce && (clipped === 1 ? self.kill(false, 1) : (callbacks[toggleState] = 0)); // a callback shouldn't be called again if once is true.\n\t\t\t\t\t\tif (!toggled) { // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n\t\t\t\t\t\t\ttoggleState = clipped === 1 ? 1 : 3;\n\t\t\t\t\t\t\tcallbacks[toggleState] && _callback(self, callbacks[toggleState]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fastScrollEnd && !isActive && Math.abs(self.getVelocity()) > (_isNumber(fastScrollEnd) ? fastScrollEnd : 2500)) {\n\t\t\t\t\t\t_endAnimation(self.callbackAnimation);\n\t\t\t\t\t\tscrubTween ? scrubTween.progress(1) : _endAnimation(animation, !clipped, 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (isToggle && onUpdate && !_refreshing) {\n\t\t\t\t\tonUpdate(self);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update absolutely-positioned markers (only if the scroller isn't the viewport)\n\t\t\tif (markerEndSetter) {\n\t\t\t\tlet n = containerAnimation ? scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0) : scroll;\n\t\t\t\tmarkerStartSetter(n + (markerStartTrigger._isFlipped ? 1 : 0));\n\t\t\t\tmarkerEndSetter(n);\n\t\t\t}\n\t\t\tcaMarkerSetter && caMarkerSetter(-scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0));\n\t\t};\n\n\t\tself.enable = (reset, refresh) => {\n\t\t\tif (!self.enabled) {\n\t\t\t\tself.enabled = true;\n\t\t\t\t_addListener(scroller, \"resize\", _onResize);\n\t\t\t\t_addListener(isViewport ? _doc : scroller, \"scroll\", _onScroll);\n\t\t\t\tonRefreshInit && _addListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (reset !== false) {\n\t\t\t\t\tself.progress = prevProgress = 0;\n\t\t\t\t\tscroll1 = scroll2 = lastSnap = scrollFunc();\n\t\t\t\t}\n\t\t\t\trefresh !== false && self.refresh();\n\t\t\t}\n\t\t};\n\n\t\tself.getTween = snap => snap && tweenTo ? tweenTo.tween : scrubTween;\n\n\t\tself.setPositions = (newStart, newEnd) => { // doesn't persist after refresh()! Intended to be a way to override values that were set during refresh(), like you could set it in onRefresh()\n\t\t\tif (pin) {\n\t\t\t\tpinStart += newStart - start;\n\t\t\t\tpinChange += (newEnd - newStart) - change;\n\t\t\t}\n\t\t\tself.start = start = newStart;\n\t\t\tself.end = end = newEnd;\n\t\t\tchange = newEnd - newStart;\n\t\t\tself.update();\n\t\t}\n\n\t\tself.disable = (reset, allowAnimation) => {\n\t\t\tif (self.enabled) {\n\t\t\t\treset !== false && self.revert();\n\t\t\t\tself.enabled = self.isActive = false;\n\t\t\t\tallowAnimation || (scrubTween && scrubTween.pause());\n\t\t\t\tprevScroll = 0;\n\t\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t\t\tonRefreshInit && _removeListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (snapDelayedCall) {\n\t\t\t\t\tsnapDelayedCall.pause();\n\t\t\t\t\ttweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);\n\t\t\t\t}\n\t\t\t\tif (!isViewport) {\n\t\t\t\t\tlet i = _triggers.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n\t\t\t\t\t\t\treturn; //don't remove the listeners if there are still other triggers referencing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_removeListener(scroller, \"resize\", _onResize);\n\t\t\t\t\t_removeListener(scroller, \"scroll\", _onScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.kill = (revert, allowAnimation) => {\n\t\t\tself.disable(revert, allowAnimation);\n\t\t\tscrubTween && !allowAnimation && scrubTween.kill();\n\t\t\tid && (delete _ids[id]);\n\t\t\tlet i = _triggers.indexOf(self);\n\t\t\ti >= 0 && _triggers.splice(i, 1);\n\t\t\ti === _i && _direction > 0 && _i--; // if we're in the middle of a refresh() or update(), splicing would cause skips in the index, so adjust...\n\n\t\t\t// if no other ScrollTrigger instances of the same scroller are found, wipe out any recorded scroll position. Otherwise, in a single page application, for example, it could maintain scroll position when it really shouldn't.\n\t\t\ti = 0;\n\t\t\t_triggers.forEach(t => t.scroller === self.scroller && (i = 1));\n\t\t\ti || (self.scroll.rec = 0);\n\n\t\t\tif (animation) {\n\t\t\t\tanimation.scrollTrigger = null;\n\t\t\t\trevert && animation.render(-1);\n\t\t\t\tallowAnimation || animation.kill();\n\t\t\t}\n\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.parentNode && m.parentNode.removeChild(m));\n\t\t\t_primary === self && (_primary = 0);\n\t\t\tif (pin) {\n\t\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t\t\ti = 0;\n\t\t\t\t_triggers.forEach(t => t.pin === pin && i++);\n\t\t\t\ti || (pinCache.spacer = 0); // if there aren't any more ScrollTriggers with the same pin, remove the spacer, otherwise it could be contaminated with old/stale values if the user re-creates a ScrollTrigger for the same element.\n\t\t\t}\n\t\t\tvars.onKill && vars.onKill(self);\n\t\t};\n\n\t\tself.enable(false, false);\n\t\tcustomRevertReturn && customRevertReturn(self);\n\t\t!animation || !animation.add || change ? self.refresh() : gsap.delayedCall(0.01, () => start || end || self.refresh()) && (change = 0.01) && (start = end = 0); // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick. If \"change\" is defined, we know it must be re-enabling, thus we can refresh() right away.\n\t}\n\n\n\tstatic register(core) {\n\t\tif (!_coreInitted) {\n\t\t\tgsap = core || _getGSAP();\n\t\t\t_windowExists() && window.document && ScrollTrigger.enable();\n\t\t\t_coreInitted = _enabled;\n\t\t}\n\t\treturn _coreInitted;\n\t}\n\n\tstatic defaults(config) {\n\t\tif (config) {\n\t\t\tfor (let p in config) {\n\t\t\t\t_defaults[p] = config[p];\n\t\t\t}\n\t\t}\n\t\treturn _defaults;\n\t}\n\n\tstatic disable(reset, kill) {\n\t\t_enabled = 0;\n\t\t_triggers.forEach(trigger => trigger[kill ? \"kill\" : \"disable\"](reset));\n\t\t_removeListener(_win, \"wheel\", _onScroll);\n\t\t_removeListener(_doc, \"scroll\", _onScroll);\n\t\tclearInterval(_syncInterval);\n\t\t_removeListener(_doc, \"touchcancel\", _passThrough);\n\t\t_removeListener(_body, \"touchstart\", _passThrough);\n\t\t_multiListener(_removeListener, _doc, \"pointerdown,touchstart,mousedown\", _pointerDownHandler);\n\t\t_multiListener(_removeListener, _doc, \"pointerup,touchend,mouseup\", _pointerUpHandler);\n\t\t_resizeDelay.kill();\n\t\t_iterateAutoRefresh(_removeListener);\n\t\tfor (let i = 0; i < _scrollers.length; i+=3) {\n\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+1]);\n\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+2]);\n\t\t}\n\t}\n\n\tstatic enable() {\n\t\t_win = window;\n\t\t_doc = document;\n\t\t_docEl = _doc.documentElement;\n\t\t_body = _doc.body;\n\t\tif (gsap) {\n\t\t\t_toArray = gsap.utils.toArray;\n\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t_suppressOverwrites = gsap.core.suppressOverwrites || _passThrough;\n\t\t\tgsap.core.globals(\"ScrollTrigger\", ScrollTrigger); // must register the global manually because in Internet Explorer, functions (classes) don't have a \"name\" property.\n\t\t\tif (_body) {\n\t\t\t\t_enabled = 1;\n\t\t\t\tObserver.register(gsap);\n\t\t\t\t// isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\t\t\t\tScrollTrigger.isTouch = Observer.isTouch;\n\t\t\t\t_addListener(_win, \"wheel\", _onScroll); // mostly for 3rd party smooth scrolling libraries.\n\t\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t\tScrollTrigger.matchMedia({ // when orientation changes, we should take new base measurements for the ignoreMobileResize feature.\n\t\t\t\t\t\"(orientation: portrait)\": () => {\n\t\t\t\t\t\t_setBaseDimensions();\n\t\t\t\t\t\treturn _setBaseDimensions;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t_addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\t\t\t\tlet bodyStyle = _body.style,\n\t\t\t\t\tborder = bodyStyle.borderTopStyle,\n\t\t\t\t\tbounds, i;\n\t\t\t\tbodyStyle.borderTopStyle = \"solid\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\t\t\t\tbounds = _getBounds(_body);\n\t\t\t\t_vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\t\t\t\t_horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n\t\t\t\tborder ? (bodyStyle.borderTopStyle = border) : bodyStyle.removeProperty(\"border-top-style\");\n\t\t\t\t// TODO: (?) maybe move to leveraging the velocity mechanism in Observer and skip intervals.\n\t\t\t\t_syncInterval = setInterval(_sync, 250);\n\t\t\t\tgsap.delayedCall(0.5, () => _startup = 0);\n\t\t\t\t_addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\t\t\t\t_addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t\t\t_multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", _pointerDownHandler);\n\t\t\t\t_multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", _pointerUpHandler);\n\t\t\t\t_transformProp = gsap.utils.checkPrefix(\"transform\");\n\t\t\t\t_stateProps.push(_transformProp);\n\t\t\t\t_coreInitted = _getTime();\n\t\t\t\t_resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n\t\t\t\t_autoRefresh = [_doc, \"visibilitychange\", () => {\n\t\t\t\t\tlet w = _win.innerWidth,\n\t\t\t\t\t\th = _win.innerHeight;\n\t\t\t\t\tif (_doc.hidden) {\n\t\t\t\t\t\t_prevWidth = w;\n\t\t\t\t\t\t_prevHeight = h;\n\t\t\t\t\t} else if (_prevWidth !== w || _prevHeight !== h) {\n\t\t\t\t\t\t_onResize();\n\t\t\t\t\t}\n\t\t\t\t}, _doc, \"DOMContentLoaded\", _refreshAll, _win, \"load\", _refreshAll, _win, \"resize\", _onResize];\n\t\t\t\t_iterateAutoRefresh(_addListener);\n\t\t\t\t_triggers.forEach(trigger => trigger.enable(0, 1));\n\t\t\t\tfor (i = 0; i < _scrollers.length; i+=3) {\n\t\t\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+1]);\n\t\t\t\t\t_wheelListener(_removeListener, _scrollers[i], _scrollers[i+2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic config(vars) {\n\t\t(\"limitCallbacks\" in vars) && (_limitCallbacks = !!vars.limitCallbacks);\n\t\tlet ms = vars.syncInterval;\n\t\tms && clearInterval(_syncInterval) || ((_syncInterval = ms) && setInterval(_sync, ms));\n\t\t(\"ignoreMobileResize\" in vars) && (_ignoreMobileResize = ScrollTrigger.isTouch === 1 && vars.ignoreMobileResize);\n\t\tif (\"autoRefreshEvents\" in vars) {\n\t\t\t_iterateAutoRefresh(_removeListener) || _iterateAutoRefresh(_addListener, vars.autoRefreshEvents || \"none\");\n\t\t\t_ignoreResize = (vars.autoRefreshEvents + \"\").indexOf(\"resize\") === -1;\n\t\t}\n\t}\n\n\tstatic scrollerProxy(target, vars) {\n\t\tlet t = _getTarget(target),\n\t\t\ti = _scrollers.indexOf(t),\n\t\t\tisViewport = _isViewport(t);\n\t\tif (~i) {\n\t\t\t_scrollers.splice(i, isViewport ? 6 : 2);\n\t\t}\n\t\tif (vars) {\n\t\t\tisViewport ? _proxies.unshift(_win, vars, _body, vars, _docEl, vars) : _proxies.unshift(t, vars);\n\t\t}\n\t}\n\n\tstatic matchMedia(vars) { // _media is populated in the following order: mediaQueryString, onMatch, onUnmatch, isMatched. So if there are two media queries, the Array would have a length of 8\n\t\tlet mq, p, i, func, result;\n\t\tfor (p in vars) {\n\t\t\ti = _media.indexOf(p);\n\t\t\tfunc = vars[p];\n\t\t\t_creatingMedia = p;\n\t\t\tif (p === \"all\") {\n\t\t\t\tfunc();\n\t\t\t} else {\n\t\t\t\tmq = _win.matchMedia(p);\n\t\t\t\tif (mq) {\n\t\t\t\t\tmq.matches && (result = func());\n\t\t\t\t\tif (~i) {\n\t\t\t\t\t\t_media[i + 1] = _combineFunc(_media[i + 1], func);\n\t\t\t\t\t\t_media[i + 2] = _combineFunc(_media[i + 2], result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti = _media.length;\n\t\t\t\t\t\t_media.push(p, func, result);\n\t\t\t\t\t\tmq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener(\"change\", _onMediaChange);\n\t\t\t\t\t}\n\t\t\t\t\t_media[i + 3] = mq.matches;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_creatingMedia = 0;\n\t\t}\n\t\treturn _media;\n\t}\n\n\tstatic clearMatchMedia(query) {\n\t\tquery || (_media.length = 0);\n\t\tquery = _media.indexOf(query);\n\t\tquery >= 0 && _media.splice(query, 4);\n\t}\n\n\tstatic isInViewport(element, ratio, horizontal) {\n\t\tlet bounds = (_isString(element) ? _getTarget(element) : element).getBoundingClientRect(),\n\t\t\toffset = bounds[horizontal ? _width : _height] * ratio || 0;\n\t\treturn horizontal ? bounds.right - offset > 0 && bounds.left + offset < _win.innerWidth : bounds.bottom - offset > 0 && bounds.top + offset < _win.innerHeight;\n\t}\n\n\tstatic positionInViewport(element, referencePoint, horizontal) {\n\t\t_isString(element) && (element = _getTarget(element));\n\t\tlet bounds = element.getBoundingClientRect(),\n\t\t\tsize = bounds[horizontal ? _width : _height],\n\t\t\toffset = referencePoint == null ? size / 2 : ((referencePoint in _keywords) ? _keywords[referencePoint] * size : ~referencePoint.indexOf(\"%\") ? parseFloat(referencePoint) * size / 100 : parseFloat(referencePoint) || 0);\n\t\treturn horizontal ? (bounds.left + offset) / _win.innerWidth : (bounds.top + offset) / _win.innerHeight;\n\t}\n\n}\n\nScrollTrigger.version = \"3.10.3\";\nScrollTrigger.saveStyles = targets => targets ? _toArray(targets).forEach(target => { // saved styles are recorded in a consecutive alternating Array, like [element, cssText, transform attribute, cache, matchMedia, ...]\n\tif (target && target.style) {\n\t\tlet i = _savedStyles.indexOf(target);\n\t\ti >= 0 && _savedStyles.splice(i, 5);\n\t\t_savedStyles.push(target, target.style.cssText, target.getBBox && target.getAttribute(\"transform\"), gsap.core.getCache(target), _creatingMedia);\n\t}\n}) : _savedStyles;\nScrollTrigger.revert = (soft, media) => _revertAll(!soft, media);\nScrollTrigger.create = (vars, animation) => new ScrollTrigger(vars, animation);\nScrollTrigger.refresh = safe => safe ? _onResize() : (_coreInitted || ScrollTrigger.register()) && _refreshAll(true);\nScrollTrigger.update = _updateAll;\nScrollTrigger.clearScrollMemory = _clearScrollMemory;\nScrollTrigger.maxScroll = (element, horizontal) => _maxScroll(element, horizontal ? _horizontal : _vertical);\nScrollTrigger.getScrollFunc = (element, horizontal) => _getScrollFunc(_getTarget(element), horizontal ? _horizontal : _vertical);\nScrollTrigger.getById = id => _ids[id];\nScrollTrigger.getAll = () => _triggers.filter(t => t.vars.id !== \"ScrollSmoother\"); // it's common for people to ScrollTrigger.getAll(t => t.kill()) on page routes, for example, and we don't want it to ruin smooth scrolling by killing the main ScrollSmoother one.\nScrollTrigger.isScrolling = () => !!_lastScrollTime;\nScrollTrigger.snapDirectional = _snapDirectional;\nScrollTrigger.addEventListener = (type, callback) => {\n\tlet a = _listeners[type] || (_listeners[type] = []);\n\t~a.indexOf(callback) || a.push(callback);\n};\nScrollTrigger.removeEventListener = (type, callback) => {\n\tlet a = _listeners[type],\n\t\ti = a && a.indexOf(callback);\n\ti >= 0 && a.splice(i, 1);\n};\nScrollTrigger.batch = (targets, vars) => {\n\tlet result = [],\n\t\tvarsCopy = {},\n\t\tinterval = vars.interval || 0.016,\n\t\tbatchMax = vars.batchMax || 1e9,\n\t\tproxyCallback = (type, callback) => {\n\t\t\tlet elements = [],\n\t\t\t\ttriggers = [],\n\t\t\t\tdelay = gsap.delayedCall(interval, () => {callback(elements, triggers); elements = []; triggers = [];}).pause();\n\t\t\treturn self => {\n\t\t\t\telements.length || delay.restart(true);\n\t\t\t\telements.push(self.trigger);\n\t\t\t\ttriggers.push(self);\n\t\t\t\tbatchMax <= elements.length && delay.progress(1);\n\t\t\t};\n\t\t},\n\t\tp;\n\tfor (p in vars) {\n\t\tvarsCopy[p] = (p.substr(0, 2) === \"on\" && _isFunction(vars[p]) && p !== \"onRefreshInit\") ? proxyCallback(p, vars[p]) : vars[p];\n\t}\n\tif (_isFunction(batchMax)) {\n\t\tbatchMax = batchMax();\n\t\t_addListener(ScrollTrigger, \"refresh\", () => batchMax = vars.batchMax());\n\t}\n\t_toArray(targets).forEach(target => {\n\t\tlet config = {};\n\t\tfor (p in varsCopy) {\n\t\t\tconfig[p] = varsCopy[p];\n\t\t}\n\t\tconfig.trigger = target;\n\t\tresult.push(ScrollTrigger.create(config));\n\t});\n\treturn result;\n}\n\n// to reduce file size. clamps the scroll and also returns a duration multiplier so that if the scroll gets chopped shorter, the duration gets curtailed as well (otherwise if you're very close to the top of the page, for example, and swipe up really fast, it'll suddenly slow down and take a long time to reach the top).\nlet _clampScrollAndGetDurationMultiplier = (scrollFunc, current, end, max) => {\n\t\tcurrent > max ? scrollFunc(max) : current < 0 && scrollFunc(0);\n\t\treturn end > max ? (max - current) / (end - current) : end < 0 ? current / (current - end) : 1;\n\t},\n\t_allowNativePanning = (target, direction) => {\n\t\tif (direction === true) {\n\t\t\ttarget.style.removeProperty(\"touch-action\");\n\t\t} else {\n\t\t\ttarget.style.touchAction = direction ? \"pan-\" + direction : \"none\"; // note: we tried adding pinch-zoom too, but Firefox doesn't support it properly.\n\t\t}\n\t\ttarget === _docEl && _allowNativePanning(_body);\n\t},\n\t_overflow = {auto: 1, scroll: 1},\n\t_nestedScroll = ({event, target, axis}) => {\n\t\tlet node = (event.changedTouches ? event.changedTouches[0] : event).target,\n\t\t\tcache = node._gsap || gsap.core.getCache(node),\n\t\t\ttime = _getTime(), cs;\n\t\tif (!cache._isScrollT || time - cache._isScrollT > 2000) { // cache for 2 seconds to improve performance.\n\t\t\twhile (node && node.scrollHeight <= node.clientHeight) node = node.parentNode;\n\t\t\tcache._isScroll = node && !_isViewport(node) && node !== target && (_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]);\n\t\t\tcache._isScrollT = time;\n\t\t}\n\t\t(cache._isScroll || axis === \"x\") && (event._gsapAllow = true);\n\t},\n\t// capture events on scrollable elements INSIDE the <body> and allow those by calling stopPropagation() when we find a scrollable ancestor\n\t_inputObserver = (target, type, inputs, nested) => Observer.create({\n\t\ttarget: target,\n\t\tcapture: true,\n\t\tdebounce: false,\n\t\tlockAxis: true,\n\t\ttype: type,\n\t\tonWheel: (nested = nested && _nestedScroll),\n\t\tonPress: nested,\n\t\tonDrag: nested,\n\t\tonScroll: nested,\n\t\tonEnable: () => inputs && _addListener(_doc, Observer.eventTypes[0], _captureInputs, false, true),\n\t\tonDisable: () => _removeListener(_doc, Observer.eventTypes[0], _captureInputs)\n\t}),\n\t_inputExp = /(input|label|select|textarea)/i,\n\t_inputIsFocused,\n\t_captureInputs = e => {\n\t\tlet isInput = _inputExp.test(e.target.tagName);\n\t\tif (isInput || _inputIsFocused) {\n\t\t\te._gsapAllow = true;\n\t\t\t_inputIsFocused = isInput;\n\t\t}\n\t},\n\t_getScrollNormalizer = vars => {\n\t\t_isObject(vars) || (vars = {});\n\t\tvars.preventDefault = vars.isNormalizer = vars.allowClicks = true;\n\t\tvars.type || (vars.type = \"wheel,touch\");\n\t\tvars.debounce = !!vars.debounce;\n\t\tvars.id = vars.id || \"normalizer\";\n\t\tlet {normalizeScrollX, momentum, allowNestedScroll} = vars,\n\t\t\tself, maxY,\n\t\t\ttarget = _getTarget(vars.target) || _docEl,\n\t\t\tscrollFuncY = _getScrollFunc(target, _vertical),\n\t\t\tscrollFuncX = _getScrollFunc(target, _horizontal),\n\t\t\tscale = 1,\n\t\t\twheelRefresh = 0,\n\t\t\tresolveMomentumDuration = _isFunction(momentum) ? () => momentum(self) : () => momentum || 2.8,\n\t\t\tskipTouchMove, lastRefreshID,\n\t\t\tinputObserver = _inputObserver(target, vars.type, true, allowNestedScroll),\n\t\t\tresumeTouchMove = () => skipTouchMove = false,\n\t\t\tscrollClampX = _passThrough,\n\t\t\tscrollClampY = _passThrough,\n\t\t\tupdateClamps = () => {\n\t\t\t\tmaxY = _maxScroll(target, _vertical);\n\t\t\t\tscrollClampY = _clamp(0, maxY);\n\t\t\t\tnormalizeScrollX && (scrollClampX = _clamp(0, _maxScroll(target, _horizontal)));\n\t\t\t\tlastRefreshID = _refreshID;\n\t\t\t},\n\t\t\tfixIOSBug = ScrollTrigger.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent), // since 2017, iOS has had a bug that causes event.clientX/Y to be inaccurate when a scroll occurs, thus we must alternate ignoring every other touchmove event to work around it. See https://bugs.webkit.org/show_bug.cgi?id=181954 and https://codepen.io/GreenSock/pen/ExbrPNa/087cef197dc35445a0951e8935c41503\n\t\t\tignoreDrag = () => {\n\t\t\t\tif (skipTouchMove) {\n\t\t\t\t\trequestAnimationFrame(resumeTouchMove); // we MUST wait for a requestAnimationFrame, otherwise iOS will misreport the value.\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tskipTouchMove = true;\n\t\t\t},\n\t\t\ttween, startScrollX, startScrollY, onStopDelayedCall,\n\t\t\tonResize = () => { // if the window resizes, like on an iPhone which Apple FORCES the address bar to show/hide even if we event.preventDefault(), it may be scrolling too far now that the address bar is showing, so we must dynamically adjust the momentum tween.\n\t\t\t\tupdateClamps();\n\t\t\t\ttween.isActive() && tween.vars.scrollY > maxY && tween.resetTo(\"scrollY\", _maxScroll(target, _vertical));\n\t\t\t};\n\t\tvars.ignoreCheck = e => (fixIOSBug && e.type === \"touchmove\" && ignoreDrag(e)) || (scale > 1 || self.isGesturing || (e.touches && e.touches.length > 1));\n\t\tvars.onPress = () => {\n\t\t\tlet prevScale = scale;\n\t\t\tscale = (_win.visualViewport && _win.visualViewport.scale) || 1;\n\t\t\ttween.pause();\n\t\t\tprevScale !== scale && _allowNativePanning(target, scale > 1 ? true : normalizeScrollX ? false : \"x\");\n\t\t\tskipTouchMove = false;\n\t\t\tstartScrollX = scrollFuncX();\n\t\t\tstartScrollY = scrollFuncY();\n\t\t\tupdateClamps();\n\t\t\tlastRefreshID = _refreshID;\n\t\t}\n\t\tvars.onRelease = vars.onGestureStart = (self, wasDragging) => {\n\t\t\tif (!wasDragging) {\n\t\t\t\tonStopDelayedCall.restart(true);\n\t\t\t} else {\n\t\t\t\t// alternate algorithm: durX = Math.min(6, Math.abs(self.velocityX / 800)),\tdur = Math.max(durX, Math.min(6, Math.abs(self.velocityY / 800))); dur = dur * (0.4 + (1 - _power4In(dur / 6)) * 0.6)) * (momentumSpeed || 1)\n\t\t\t\tlet dur = resolveMomentumDuration(),\n\t\t\t\t\tcurrentScroll, endScroll;\n\t\t\t\tif (normalizeScrollX) {\n\t\t\t\t\tcurrentScroll = scrollFuncX();\n\t\t\t\t\tendScroll = currentScroll + (dur * 0.05 * -self.velocityX) / 0.227 / scale; // the constant .227 is from power4(0.05). velocity is inverted because scrolling goes in the opposite direction.\n\t\t\t\t\tdur *= _clampScrollAndGetDurationMultiplier(scrollFuncX, currentScroll, endScroll, _maxScroll(target, _horizontal));\n\t\t\t\t\ttween.vars.scrollX = scrollClampX(endScroll);\n\t\t\t\t}\n\t\t\t\tcurrentScroll = scrollFuncY();\n\t\t\t\tendScroll = currentScroll + (dur * 0.05 * -self.velocityY) / 0.227 / scale; // the constant .227 is from power4(0.05)\n\t\t\t\tdur *= _clampScrollAndGetDurationMultiplier(scrollFuncY, currentScroll, endScroll, _maxScroll(target, _vertical));\n\t\t\t\ttween.vars.scrollY = scrollClampY(endScroll);\n\t\t\t\ttween.invalidate().duration(dur).play(0.01);\n\t\t\t}\n\t\t};\n\t\tvars.onWheel = () => {\n\t\t\ttween._ts && tween.pause();\n\t\t\tif (_getTime() - wheelRefresh > 1000) { // after 1 second, refresh the clamps otherwise that'll only happen when ScrollTrigger.refresh() is called or for touch-scrolling.\n\t\t\t\tlastRefreshID = 0;\n\t\t\t\twheelRefresh = _getTime();\n\t\t\t}\n\t\t};\n\t\tvars.onChange = (self, dx, dy, xArray, yArray) => {\n\t\t\t_refreshID !== lastRefreshID && updateClamps();\n\t\t\tdx && normalizeScrollX && scrollFuncX(scrollClampX(xArray[2] === dx ? startScrollX + (self.startX - self.x) / scale : scrollFuncX() + dx - xArray[1])); // for more precision, we track pointer/touch movement from the start, otherwise it'll drift.\n\t\t\tdy && scrollFuncY(scrollClampY(yArray[2] === dy ? startScrollY + (self.startY - self.y) / scale : scrollFuncY() + dy - yArray[1]));\n\t\t\t_updateAll();\n\t\t};\n\t\tvars.onEnable = () => {\n\t\t\t_allowNativePanning(target, normalizeScrollX ? false : \"x\");\n\t\t\t_addListener(_win, \"resize\", onResize);\n\t\t\tinputObserver.enable();\n\t\t};\n\t\tvars.onDisable = () => {\n\t\t\t_allowNativePanning(target, true);\n\t\t\t_removeListener(_win, \"resize\", onResize);\n\t\t\tinputObserver.kill();\n\t\t};\n\t\tself = new Observer(vars);\n\t\tonStopDelayedCall = self._dc;\n\t\ttween = gsap.to(self, {ease: \"power4\", paused: true, scrollX: normalizeScrollX ? \"+=0.1\" : \"+=0\", scrollY: \"+=0.1\", onComplete: onStopDelayedCall.vars.onComplete});\n\t\treturn self;\n\t};\n\nScrollTrigger.sort = func => _triggers.sort(func || ((a, b) => (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6)));\nScrollTrigger.observe = vars => new Observer(vars);\nScrollTrigger.normalizeScroll = vars => {\n\tif (typeof(vars) === \"undefined\") {\n\t\treturn _normalizer;\n\t}\n\tif (vars === true && _normalizer) {\n\t\treturn _normalizer.enable();\n\t}\n\tif (vars === false) {\n\t\treturn _normalizer && _normalizer.kill();\n\t}\n\tlet normalizer = vars instanceof Observer ? vars : _getScrollNormalizer(vars);\n\t_normalizer && _normalizer.target === normalizer.target && _normalizer.kill();\n\t_isViewport(normalizer.target) && (_normalizer = normalizer);\n\treturn normalizer;\n};\n\n\nScrollTrigger.core = { // smaller file size way to leverage in ScrollSmoother and Observer\n\t_getVelocityProp,\n\t_inputObserver,\n\t_scrollers,\n\t_proxies,\n\tbridge: {\n\t\t// when normalizeScroll sets the scroll position (ss = setScroll)\n\t\tss: () => {\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t},\n\t\t// a way to get the _refreshing value in Observer\n\t\tref: () => _refreshing\n\t}\n};\n\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\n\nexport { ScrollTrigger as default };"],"names":["_getGSAP","gsap","window","registerPlugin","_getProxyProp","element","property","_proxies","indexOf","_isViewport","el","_root","_addListener","type","func","nonPassive","capture","addEventListener","passive","_removeListener","removeEventListener","_onScroll","_normalizer","isPressed","_scrollers","cache","_scrollCacheFunc","f","value","_startup","_win","history","scrollRestoration","v","c","_bridge","_getTarget","t","utils","toArray","config","nullTargetWarn","console","warn","_getScrollFunc","s","sc","i","offset","_vertical","push","arguments","length","_getVelocityProp","minTimeRefresh","useDelta","update","force","_getTime","min","t1","v2","v1","t2","dropToZeroTime","Math","max","reset","getVelocity","latestValue","tOld","vOld","_getEvent","e","preventDefault","_gsapAllow","changedTouches","_getAbsoluteMax","a","abs","_setScrollTrigger","ScrollTrigger","core","globals","_integrate","data","bridge","scrollers","proxies","name","_initCore","document","body","_docEl","_doc","documentElement","_body","clamp","_pointerType","_isTouch","Observer","isTouch","matchMedia","matches","navigator","maxTouchPoints","msMaxTouchPoints","_eventTypes","eventTypes","split","setTimeout","_coreInitted","_observers","Date","now","_scrollLeft","_scrollTop","_horizontal","p","p2","os","os2","d","d2","scrollTo","pageXOffset","op","pageYOffset","init","vars","tolerance","dragMinimum","target","lineHeight","debounce","onStop","onStopDelay","ignore","wheelSpeed","event","onDragStart","onDragEnd","onDrag","onPress","onRelease","onRight","onLeft","onUp","onDown","onChangeX","onChangeY","onChange","onToggleX","onToggleY","onHover","onHoverEnd","onMove","ignoreCheck","isNormalizer","onGestureStart","onGestureEnd","onWheel","onEnable","onDisable","onClick","scrollSpeed","allowClicks","lockAxis","onLockAxis","clickCapture","onClickTime","_ignoreCheck","isPointerOrTouch","self","limitToTouch","pointerType","dx","deltaX","dy","deltaY","changedX","changedY","prevDeltaX","prevDeltaY","moved","dragged","locked","wheeled","id","onDelta","x","y","index","_vx","_vy","requestAnimationFrame","onTouchOrPointerDelta","axis","_onDrag","clientX","clientY","isDragging","startX","startY","_onRelease","ownerDoc","wasDragging","eventData","delayedCall","defaultPrevented","click","createEvent","syntheticEvent","initMouseEvent","screenX","screenY","dispatchEvent","isGesturing","onStopDelayedCall","restart","_onGestureStart","touches","_onGestureEnd","onScroll","scrollFuncX","scrollFuncY","scrollX","scrollY","_onWheel","multiplier","deltaMode","innerHeight","_onMove","_onHover","_onHoverEnd","_onClick","parseFloat","getComputedStyle","this","isViewport","ownerDocument","_onPress","pause","_dc","onStopFunc","enable","isEnabled","disable","filter","o","kill","splice","version","create","register","getAll","slice","getById","_pointerDownHandler","_pointerIsDown","_pointerUpHandler","_passThrough","_round","round","_windowExists","_getBoundsFunc","_winOffsets","width","innerWidth","height","_getBounds","_maxScroll","_iterateAutoRefresh","events","_autoRefresh","_isString","_isFunction","_isNumber","_isObject","_callIfFunc","_combineFunc","f1","f2","result1","result2","_endAnimation","animation","reversed","progress","_callback","enabled","result","totalTime","callbackAnimation","_getComputedStyle","_setDefaults","obj","defaults","_getSize","_getLabelRatioArray","timeline","labels","duration","_snapDirectional","snapIncrementOrArray","snap","Array","isArray","sort","b","direction","threshold","snapped","_multiListener","types","callback","forEach","_wheelListener","scrollFunc","wheelHandler","_offsetToPx","size","eqIndex","relative","charAt","substr","_keywords","_createMarker","container","matchWidthEl","containerAnimation","startColor","endColor","fontSize","indent","fontWeight","createElement","useFixedPosition","isScroller","parent","isStart","color","css","_right","_bottom","offsetWidth","_isStart","setAttribute","style","cssText","innerText","children","insertBefore","appendChild","_offset","_positionMarker","_sync","_lastScrollTime","_updateAll","_rafID","_dispatch","_setBaseDimensions","_baseScreenWidth","_baseScreenHeight","_onResize","_refreshing","_ignoreResize","fullscreenElement","_ignoreMobileResize","_resizeDelay","_onMediaChange","tick","ticker","frame","_lastMediaTick","_revertAll","_media","_revertRecorded","_creatingMedia","_refreshAll","_softRefresh","_clearScrollMemory","rec","_swapPinIn","pin","spacer","cs","spacerState","parentNode","_propNamesToCopy","spacerStyle","pinStyle","position","display","flexBasis","overflow","boxSizing","_width","_px","_height","_padding","_margin","_setState","_getState","l","_stateProps","state","_parsePosition","trigger","scrollerSize","scroll","marker","markerScroller","scrollerBounds","borderWidth","scrollerMax","p1","time","seek","bounds","localOffset","globalOffset","offsets","left","top","removeProperty","m","_caScrollDist","_reparent","_stOrig","_prefixExp","test","getCache","uncache","_getTweenCreator","scroller","getTween","initialValue","change1","change2","tween","onComplete","modifiers","getScroll","lastScroll1","prop","lastScroll2","ratio","call","to","_toArray","_clamp","_time2","_syncInterval","_transformProp","_i","_prevWidth","_prevHeight","_sort","_suppressOverwrites","_limitCallbacks","_refreshingAll","_primary","_time1","_enabled","_abs","_Right","_Left","_Top","_Bottom","_Width","_Height","withoutTransforms","xPercent","yPercent","rotation","rotationX","rotationY","scale","skewX","skewY","getBoundingClientRect","_markerDefaults","_defaults","toggleActions","anticipatePin","center","bottom","right","start","flipped","side","oppositeSide","_isFlipped","set","_triggers","_ids","_listeners","_emptyArray","map","_savedStyles","media","getBBox","revert","_refreshID","skipRevert","refreshInits","refresh","end","setPositions","_dir","render","_lastScroll","_direction","isUpdating","recordVelocity","concat","_capsExp","_gsap","replace","toLowerCase","tweenTo","pinCache","snapFunc","scroll1","scroll2","markerStart","markerEnd","markerStartTrigger","markerEndTrigger","markerVars","change","pinOriginalState","pinActiveState","pinState","pinGetter","pinSetter","pinStart","pinChange","spacingStart","markerStartSetter","markerEndSetter","snap1","snap2","scrubTween","scrubSmooth","snapDurClamp","snapDelayedCall","prevProgress","prevScroll","prevAnimProgress","caMarkerSetter","customRevertReturn","onUpdate","nodeType","toggleClass","onToggle","onRefresh","scrub","pinSpacing","invalidateOnRefresh","onScrubComplete","onSnapComplete","once","pinReparent","pinSpacer","fastScrollEnd","preventOverlaps","horizontal","isToggle","scrollerCache","pinType","callbacks","onEnter","onLeave","onEnterBack","onLeaveBack","markers","onRefreshInit","getScrollerSize","_getSizeFunc","getScrollerOffsets","_getOffsetsFunc","lastSnap","lastRefresh","bind","refreshPriority","tweenScroll","scrubDuration","ease","totalProgress","paused","lazy","_initted","immediateRender","scrollTrigger","snapTo","scrollBehavior","_getClosestLabel","_getLabelAtDirection","st","directional","delay","refreshedRecently","isActive","velocity","naturalEnd","inertia","endValue","endScroll","onStart","onInterrupt","stRevert","targets","className","force3D","current","nativeElement","spacerIsNative","classList","add","getProperty","quickSetter","content","_makePositionable","oldOnUpdate","oldParams","onUpdateParams","eventCallback","apply","previous","next","r","prevRefreshing","isReverted","_swapPinOut","removeChild","soft","invalidate","isVertical","override","curTrigger","curPin","oppositeScroll","initted","revertedPins","otherPinOffset","parsedEnd","parsedEndTrigger","endTrigger","parsedStart","pinnedContainer","triggerIndex","unshift","_pinPush","ceil","_copyState","omitOffsets","_pinOffset","endAnimation","labelToScroll","label","getTrailing","reverse","forceFake","toggleState","action","stateChanged","toggled","isAtMax","isTakingAction","clipped","_dp","_time","_start","resetTo","_tTime","_tDur","n","newStart","newEnd","allowAnimation","onKill","clearInterval","suppressOverwrites","bodyStyle","border","borderTopStyle","setInterval","checkPrefix","w","h","hidden","limitCallbacks","ms","syncInterval","ignoreMobileResize","autoRefreshEvents","scrollerProxy","mq","addListener","clearMatchMedia","query","isInViewport","positionInViewport","referencePoint","saveStyles","getAttribute","safe","clearScrollMemory","maxScroll","getScrollFunc","isScrolling","snapDirectional","batch","proxyCallback","elements","triggers","interval","batchMax","varsCopy","_clampScrollAndGetDurationMultiplier","_allowNativePanning","touchAction","_nestedScroll","node","_isScrollT","scrollHeight","clientHeight","_isScroll","_overflow","overflowY","overflowX","_inputObserver","inputs","nested","_captureInputs","_getScrollNormalizer","resumeTouchMove","skipTouchMove","updateClamps","maxY","scrollClampY","normalizeScrollX","scrollClampX","lastRefreshID","onResize","startScrollX","startScrollY","momentum","allowNestedScroll","wheelRefresh","resolveMomentumDuration","inputObserver","fixIOSBug","userAgent","ignoreDrag","prevScale","visualViewport","currentScroll","dur","velocityX","velocityY","play","_ts","xArray","yArray","_inputIsFocused","auto","_inputExp","isInput","tagName","observe","normalizeScroll","normalizer","ss","ref"],"mappings":"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"}